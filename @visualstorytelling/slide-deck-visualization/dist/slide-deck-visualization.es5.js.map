{"version":3,"file":"slide-deck-visualization.es5.js","sources":["../../provenance-core/src/utils.ts","../../provenance-core/src/mitt.ts","../../provenance-core/src/ProvenanceGraph.ts","../../provenance-core/src/ProvenanceGraphTraverser.ts","../../provenance-core/src/ProvenanceSlide.ts","../../provenance-core/src/ProvenanceSlidedeck.ts","../../provenance-core/src/ProvenanceSlidedeckPlayer.ts","../../provenance-core/src/SlideAnnotation.ts","../src/slide-deck-visualization.ts"],"sourcesContent":["import { ProvenanceNode, StateNode, Action, ReversibleAction } from './api';\r\n\r\nexport function generateUUID(): string {\r\n  // Public Domain/MIT\r\n  let d = new Date().getTime();\r\n  if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\r\n    d += performance.now(); // use high-precision timer if available\r\n  }\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n    // tslint:disable-next-line:no-bitwise\r\n    const r = ((d + Math.random() * 16) % 16) | 0;\r\n    d = Math.floor(d / 16);\r\n    // tslint:disable-next-line:no-bitwise\r\n    return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\r\n  });\r\n}\r\n\r\n/**\r\n * Generate a Unix timestamp in milliseconds\r\n *\r\n * @returns {number} in milliseconds\r\n */\r\nexport function generateTimestamp(): number {\r\n  // Removed, because performance.now() returns a floating point number, which is not compatible with the Date.getTime() integer\r\n  // if (\r\n  //   window.performance &&\r\n  //   window.performance.now &&\r\n  //   window.performance.timing &&\r\n  //   window.performance.timing.navigationStart\r\n  // ) {\r\n  //   return window.performance.now();\r\n  // }\r\n  return new Date().getTime();\r\n}\r\n\r\nexport function isStateNode(node: ProvenanceNode): node is StateNode {\r\n  return 'parent' in node;\r\n}\r\n\r\nexport function isReversibleAction(action: Action): action is ReversibleAction {\r\n  return 'undo' in action;\r\n}\r\n","import { Handler } from './api';\r\n\r\n/** Mitt: Tiny (~200b) functional event emitter / pubsub.\r\n *  @name mitt\r\n *  @returns {Mitt}\r\n */\r\n\r\nexport default function mitt(all?: any) {\r\n  all = all || Object.create(null);\r\n\r\n  return {\r\n    /**\r\n     * Register an event handler for the given type.\r\n     *\r\n     * @param  {String} type\tType of event to listen for\r\n     * @param  {Function} handler Function to call in response to given event\r\n     * @memberOf mitt\r\n     */\r\n    on(type: string, handler: Handler) {\r\n      (all[type] || (all[type] = [])).push(handler);\r\n    },\r\n\r\n    /**\r\n     * Remove an event handler for the given type.\r\n     *\r\n     * @param  {String} type\tType of event to unregister `handler` from\r\n     * @param  {Function} handler Handler function to remove\r\n     * @memberOf mitt\r\n     */\r\n    off(type: string, handler: Handler) {\r\n      if (all[type]) {\r\n        // tslint:disable-next-line:no-bitwise\r\n        all[type].splice(all[type].indexOf(handler) >>> 0, 1);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Invoke all handlers for the given type.\r\n     *\r\n     * @param {String} type  The event type to invoke\r\n     * @param {Any} [evt]  Any value (object is recommended and powerful), passed to each handler\r\n     * @memberOf mitt\r\n     */\r\n    emit(type: string, evt: any) {\r\n      (all[type] || []).slice().map((handler: Handler) => {\r\n        handler(evt);\r\n      });\r\n    }\r\n  };\r\n}\r\n","import {\r\n  Application,\r\n  Handler,\r\n  IProvenanceGraph,\r\n  NodeIdentifier,\r\n  ProvenanceNode,\r\n  RootNode,\r\n  SerializedProvenanceGraph,\r\n  SerializedProvenanceNode,\r\n  SerializedStateNode\r\n} from './api';\r\nimport { generateTimestamp, generateUUID, isStateNode } from './utils';\r\nimport mitt from './mitt';\r\n\r\n/**\r\n * Provenance Graph implementation\r\n *\r\n * @param version The version of the software to track the provenance of\r\n *\r\n */\r\nexport class ProvenanceGraph implements IProvenanceGraph {\r\n  public application: Application;\r\n  public readonly root: RootNode;\r\n  private _current: ProvenanceNode;\r\n  private _mitt: any;\r\n  private _nodes: { [key: string]: ProvenanceNode } = {};\r\n\r\n  constructor(application: Application, userid: string = 'Unknown', rootNode?: RootNode) {\r\n    this._mitt = mitt();\r\n    this.application = application;\r\n\r\n    if (rootNode) {\r\n      this.root = rootNode;\r\n    } else {\r\n      this.root = {\r\n        id: generateUUID(),\r\n        label: 'Root',\r\n        metadata: {\r\n          createdBy: userid,\r\n          createdOn: generateTimestamp()\r\n        },\r\n        children: [],\r\n        artifacts: {}\r\n      } as RootNode;\r\n    }\r\n    this.addNode(this.root);\r\n    this._current = this.root;\r\n  }\r\n\r\n  addNode(node: ProvenanceNode): void {\r\n    if (this._nodes[node.id]) {\r\n      throw new Error('Node already added');\r\n    }\r\n    this._nodes[node.id] = node;\r\n    this._mitt.emit('nodeAdded', node);\r\n  }\r\n\r\n  getNode(id: NodeIdentifier): ProvenanceNode {\r\n    const result = this._nodes[id];\r\n    if (!result) {\r\n      throw new Error('Node id not found');\r\n    }\r\n    return this._nodes[id];\r\n  }\r\n\r\n  get current(): ProvenanceNode {\r\n    return this._current;\r\n  }\r\n\r\n  set current(node: ProvenanceNode) {\r\n    if (!this._nodes[node.id]) {\r\n      throw new Error('Node id not found');\r\n    }\r\n    this._current = node;\r\n    this._mitt.emit('currentChanged', node);\r\n  }\r\n\r\n  get nodes() {\r\n    return this._nodes;\r\n  }\r\n\r\n  emitNodeChangedEvent(node: ProvenanceNode) {\r\n    /* istanbul ignore if */\r\n    if (!this._nodes[node.id]) {\r\n      throw new Error('Node id not found');\r\n    }\r\n    this._mitt.emit('nodeChanged', node);\r\n  }\r\n\r\n  on(type: string, handler: Handler) {\r\n    this._mitt.on(type, handler);\r\n  }\r\n\r\n  off(type: string, handler: Handler) {\r\n    this._mitt.off(type, handler);\r\n  }\r\n}\r\n\r\n/* Beware that deeply nested properties in serializedProvenanceGraph is mutated in the process */\r\nexport function restoreProvenanceGraph(\r\n  serializedProvenanceGraph: SerializedProvenanceGraph\r\n): ProvenanceGraph {\r\n  const nodes: { [key: string]: any } = {};\r\n\r\n  // restore nodes as key value\r\n  for (const node of serializedProvenanceGraph.nodes) {\r\n    nodes[node.id] = { ...node };\r\n  }\r\n\r\n  // restore parent/children relations\r\n  for (const nodeId of Object.keys(nodes)) {\r\n    const node = nodes[nodeId];\r\n    node.children = node.children.map((id: string) => nodes[id]);\r\n    if ('parent' in node) {\r\n      node.parent = nodes[node.parent];\r\n    }\r\n  }\r\n\r\n  const graph = new ProvenanceGraph(serializedProvenanceGraph.application);\r\n  (graph as any)._nodes = nodes;\r\n  (graph as any)._current = nodes[serializedProvenanceGraph.current];\r\n  (graph as any).root = nodes[serializedProvenanceGraph.root];\r\n\r\n  return graph;\r\n}\r\n\r\nexport function serializeProvenanceGraph(graph: ProvenanceGraph): SerializedProvenanceGraph {\r\n  const nodes = Object.keys(graph.nodes).map(nodeId => {\r\n    const node = graph.getNode(nodeId);\r\n    const serializedNode: SerializedProvenanceNode = { ...node } as any;\r\n    if (isStateNode(node)) {\r\n      (serializedNode as SerializedStateNode).parent = node.parent.id;\r\n    }\r\n    serializedNode.children = node.children.map(child => child.id);\r\n    return serializedNode;\r\n  });\r\n\r\n  return {\r\n    nodes,\r\n    root: graph.root.id,\r\n    application: graph.application,\r\n    current: graph.current.id\r\n  };\r\n}\r\n","import {\r\n  IProvenanceGraphTraverser,\r\n  ProvenanceNode,\r\n  StateNode,\r\n  IActionFunctionRegistry,\r\n  IProvenanceGraph,\r\n  NodeIdentifier,\r\n  ActionFunctionWithThis,\r\n  IProvenanceTracker,\r\n  Handler\r\n} from './api';\r\nimport { isReversibleAction, isStateNode } from './utils';\r\nimport mitt from './mitt';\r\n\r\nfunction isNextNodeInTrackUp(currentNode: ProvenanceNode, nextNode: ProvenanceNode): boolean {\r\n  if (isStateNode(currentNode) && currentNode.parent === nextNode) {\r\n    return true;\r\n  } else if (isStateNode(nextNode) && nextNode.parent !== currentNode) {\r\n    // This is a guard against the illegitimate use of this function for unconnected nodes\r\n    /* istanbul ignore next */\r\n    throw new Error('Unconnected nodes, you probably should not be using this function');\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction findPathToTargetNode(\r\n  currentNode: ProvenanceNode,\r\n  targetNode: ProvenanceNode,\r\n  track: ProvenanceNode[],\r\n  comingFromNode: ProvenanceNode = currentNode\r\n): boolean {\r\n  if (currentNode && currentNode === targetNode) {\r\n    track.unshift(currentNode);\r\n    return true;\r\n  } else if (currentNode) {\r\n    // Map the StateNodes in the children StateEdges\r\n    const nodesToCheck: ProvenanceNode[] = [...currentNode.children];\r\n\r\n    // Add the parent node to that same list\r\n    /* istanbul ignore else */\r\n    if (isStateNode(currentNode)) {\r\n      nodesToCheck.push(currentNode.parent);\r\n    }\r\n\r\n    for (const node of nodesToCheck) {\r\n      // If the node to check is in the track already, skip it.\r\n      if (node === comingFromNode) {\r\n        continue;\r\n      }\r\n      /* istanbul ignore else */\r\n      if (findPathToTargetNode(node, targetNode, track, currentNode)) {\r\n        track.unshift(currentNode);\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  /* istanbul ignore next */\r\n  return false;\r\n}\r\n\r\nclass IrreversibleError extends Error {\r\n  invalidTraversal = true;\r\n}\r\n\r\nexport class ProvenanceGraphTraverser implements IProvenanceGraphTraverser {\r\n  public graph: IProvenanceGraph;\r\n  public tracker: IProvenanceTracker | null;\r\n  /**\r\n   * trackingWhenTraversing === false disables tracking when traversing to prevent feedback.\r\n   * When applying an action, the object we're tracking might trigger its event listeners. This\r\n   * means that more Nodes are added to the ProvenanceGraph when traversing, which is most likely\r\n   * unwanted behaviour.\r\n   *\r\n   * It will enable/disable immediately before/after calling the action. So if the event is emitted\r\n   * asynchronously after the action, it will not work.\r\n   */\r\n  public trackingWhenTraversing = false;\r\n  private registry: IActionFunctionRegistry;\r\n  private _mitt: any;\r\n\r\n  constructor(\r\n    registry: IActionFunctionRegistry,\r\n    graph: IProvenanceGraph,\r\n    tracker: IProvenanceTracker | null = null\r\n  ) {\r\n    this.registry = registry;\r\n    this.graph = graph;\r\n    this.tracker = tracker;\r\n    this._mitt = mitt();\r\n  }\r\n\r\n  async executeFunctions(\r\n    functionsToDo: ActionFunctionWithThis[],\r\n    argumentsToDo: any[],\r\n    transitionTimes: number[]\r\n  ): Promise<StateNode> {\r\n    let result;\r\n    for (let i = 0; i < functionsToDo.length; i++) {\r\n      const funcWithThis = functionsToDo[i];\r\n      let promise: any;\r\n      if (this.tracker && this.tracker.acceptActions && !this.trackingWhenTraversing) {\r\n        this.tracker.acceptActions = false;\r\n        promise = funcWithThis.func.apply(funcWithThis.thisArg, argumentsToDo[i]);\r\n        this.tracker.acceptActions = true;\r\n      } else {\r\n        promise = funcWithThis.func.apply(funcWithThis.thisArg, argumentsToDo[i]);\r\n      }\r\n      result = await promise;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Finds shortest path between current node and node with request identifer.\r\n   * Calls the do/undo functions of actions on the path.\r\n   *\r\n   * @param id Node identifier\r\n   */\r\n  async toStateNode(\r\n    id: NodeIdentifier,\r\n    transtionTime?: number\r\n  ): Promise<ProvenanceNode | undefined> {\r\n    const currentNode = this.graph.current;\r\n    const targetNode = this.graph.getNode(id);\r\n\r\n    if (currentNode === targetNode) {\r\n      return Promise.resolve(currentNode);\r\n    }\r\n\r\n    const trackToTarget: ProvenanceNode[] = [];\r\n\r\n    const success = findPathToTargetNode(currentNode, targetNode, trackToTarget);\r\n\r\n    /* istanbul ignore if */\r\n    if (!success) {\r\n      throw new Error('No path to target node found in graph');\r\n    }\r\n\r\n    let functionsToDo: ActionFunctionWithThis[],\r\n      argumentsToDo: any[],\r\n      transitionTimes: number[] = [];\r\n    try {\r\n      const arg = this.getFunctionsAndArgsFromTrack(trackToTarget);\r\n      functionsToDo = arg.functionsToDo;\r\n      argumentsToDo = arg.argumentsToDo;\r\n      functionsToDo.forEach((func: any) => {\r\n        transitionTimes.push(transtionTime || 0);\r\n      });\r\n    } catch (error) {\r\n      if (error.invalidTraversal) {\r\n        this._mitt.emit('invalidTraversal', targetNode);\r\n        return undefined;\r\n      } else {\r\n        throw error;\r\n      }\r\n    }\r\n    const result = await this.executeFunctions(functionsToDo, argumentsToDo, transitionTimes);\r\n    this.graph.current = targetNode;\r\n    return result;\r\n  }\r\n\r\n  private getFunctionsAndArgsFromTrack(\r\n    track: ProvenanceNode[]\r\n  ): {\r\n    functionsToDo: ActionFunctionWithThis[];\r\n    argumentsToDo: any[];\r\n  } {\r\n    const functionsToDo: ActionFunctionWithThis[] = [];\r\n    const argumentsToDo: any[] = [];\r\n\r\n    for (let i = 0; i < track.length - 1; i++) {\r\n      const thisNode = track[i];\r\n      const nextNode = track[i + 1];\r\n      const up = isNextNodeInTrackUp(thisNode, nextNode);\r\n\r\n      if (up) {\r\n        /* istanbul ignore else */\r\n        if (isStateNode(thisNode)) {\r\n          if (!isReversibleAction(thisNode.action)) {\r\n            throw new IrreversibleError('trying to undo an Irreversible action');\r\n          }\r\n          const undoFunc = this.registry.getFunctionByName(thisNode.action.undo);\r\n          functionsToDo.push(undoFunc);\r\n          argumentsToDo.push(thisNode.action.undoArguments);\r\n        } else {\r\n          /* istanbul ignore next */\r\n          throw new Error('Going up from root? unreachable error ... i hope');\r\n        }\r\n      } else {\r\n        /* istanbul ignore else */\r\n        if (isStateNode(nextNode)) {\r\n          const doFunc = this.registry.getFunctionByName(nextNode.action.do);\r\n          functionsToDo.push(doFunc);\r\n          argumentsToDo.push(nextNode.action.doArguments);\r\n        } else {\r\n          /* istanbul ignore next */\r\n          throw new Error('Going down to the root? unreachable error ... i hope');\r\n        }\r\n      }\r\n    }\r\n\r\n    return { functionsToDo, argumentsToDo };\r\n  }\r\n\r\n  on(type: string, handler: Handler) {\r\n    this._mitt.on(type, handler);\r\n  }\r\n\r\n  off(type: string, handler: Handler) {\r\n    this._mitt.off(type, handler);\r\n  }\r\n}\r\n","import { IProvenanceSlide, ProvenanceNode, Handler } from './api';\r\nimport { generateUUID } from './utils';\r\nimport { SlideAnnotation } from './SlideAnnotation';\r\nimport mitt from './mitt';\r\n\r\nexport class ProvenanceSlide implements IProvenanceSlide {\r\n  private _id: string;\r\n  private _node: ProvenanceNode | null;\r\n  private _name: string;\r\n  private _duration: number;\r\n  private _transitionTime: number;\r\n  private _annotations: SlideAnnotation[];\r\n  private _mitt: any;\r\n  private _xPosition: number;\r\n\r\n  constructor(\r\n    name: string,\r\n    duration: number,\r\n    transitionTime: number,\r\n    annotations: SlideAnnotation[] = [],\r\n    node: ProvenanceNode | null = null\r\n  ) {\r\n    this._id = generateUUID();\r\n    this._name = name;\r\n    this._duration = duration;\r\n    this._transitionTime = transitionTime;\r\n    this._annotations = annotations;\r\n    this._node = node;\r\n    this._mitt = mitt();\r\n    this._xPosition = 0;\r\n  }\r\n\r\n  public get id(): string {\r\n    return this._id;\r\n  }\r\n\r\n  public get node(): ProvenanceNode | null {\r\n    return this._node;\r\n  }\r\n\r\n  public set node(value: ProvenanceNode | null) {\r\n    this._node = value;\r\n  }\r\n\r\n  public get name(): string {\r\n    return this._name;\r\n  }\r\n\r\n  public set name(value: string) {\r\n    this._name = value;\r\n  }\r\n\r\n  public get duration(): number {\r\n    return this._duration;\r\n  }\r\n\r\n  public set duration(value: number) {\r\n    this._duration = value;\r\n  }\r\n\r\n  public get transitionTime(): number {\r\n    return this._transitionTime;\r\n  }\r\n\r\n  public set transitionTime(value: number) {\r\n    this._transitionTime = value;\r\n  }\r\n\r\n  public addAnnotation(annotation: SlideAnnotation) {\r\n    this._annotations.push(annotation);\r\n    this._mitt.emit('addAnnotation', annotation);\r\n  }\r\n\r\n  public removeAnnotation(annotation: SlideAnnotation) {\r\n    const index = this._annotations.indexOf(annotation);\r\n    this._annotations.splice(index, 1);\r\n    this._mitt.emit('removeAnnotation', annotation);\r\n  }\r\n\r\n  public get annotations() {\r\n    return this._annotations;\r\n  }\r\n\r\n  public on(type: string, handler: Handler) {\r\n    this._mitt.on(type, handler);\r\n  }\r\n\r\n  public off(type: string, handler: Handler) {\r\n    this._mitt.off(type, handler);\r\n  }\r\n\r\n  public get xPosition(): number {\r\n    return this._xPosition;\r\n  }\r\n\r\n  public set xPosition(value: number) {\r\n    this._xPosition = value;\r\n  }\r\n}\r\n","import mitt from './mitt';\r\nimport {\r\n  IProvenanceSlidedeck,\r\n  IProvenanceGraphTraverser,\r\n  IProvenanceGraph,\r\n  Application,\r\n  Handler,\r\n  IProvenanceSlide\r\n} from './api';\r\nimport { ProvenanceSlide } from './ProvenanceSlide';\r\n\r\nexport class ProvenanceSlidedeck implements IProvenanceSlidedeck {\r\n  private _application: Application;\r\n  private _graph: IProvenanceGraph;\r\n  private _mitt: any;\r\n  private _slides: IProvenanceSlide[] = [];\r\n  private _traverser: IProvenanceGraphTraverser;\r\n  private _selectedSlide: IProvenanceSlide | null;\r\n\r\n  private _captainPlaceholder = new ProvenanceSlide('Captain Placeholder', 0, 0);\r\n\r\n  constructor(application: Application, traverser: IProvenanceGraphTraverser) {\r\n    this._mitt = mitt();\r\n    this._application = application;\r\n    this._graph = traverser.graph;\r\n    this._traverser = traverser;\r\n\r\n    this._selectedSlide = null;\r\n  }\r\n\r\n  public get application() {\r\n    return this._application;\r\n  }\r\n\r\n  public addSlide(slide?: IProvenanceSlide, index?: number): IProvenanceSlide {\r\n    if (\r\n      !index ||\r\n      isNaN(index) ||\r\n      !Number.isInteger(index) ||\r\n      index > this._slides.length ||\r\n      index < 0\r\n    ) {\r\n      index = this._slides.length;\r\n    }\r\n    if (slide && this._slides.indexOf(slide) >= 0) {\r\n      throw new Error('Cannot add a slide that is already in the deck');\r\n    }\r\n    if (!slide) {\r\n      const node = this._graph.current;\r\n      slide = new ProvenanceSlide(node.label, 1, 0, [], node);\r\n    }\r\n    if (this._slides.length === 0) {\r\n      this._selectedSlide = slide;\r\n    }\r\n    this._slides.splice(index, 0, slide);\r\n    this._mitt.emit('slideAdded', slide);\r\n\r\n    return slide;\r\n  }\r\n\r\n  public removeSlideAtIndex(index: number) {\r\n    const deletedSlides = this._slides.splice(index, 1);\r\n\r\n    // This can only be 1 slide now, therefore this is ok.\r\n    if (this._selectedSlide === deletedSlides[0]) {\r\n      this.selectedSlide = null;\r\n    }\r\n    this._mitt.emit('slideRemoved', deletedSlides[0]);\r\n  }\r\n\r\n  public removeSlide(slide: IProvenanceSlide) {\r\n    this.removeSlideAtIndex(this._slides.indexOf(slide));\r\n  }\r\n\r\n  public get selectedSlide(): IProvenanceSlide | null {\r\n    return this._selectedSlide;\r\n  }\r\n\r\n  public moveSlide(indexFrom: number, indexTo: number) {\r\n    if (indexTo < 0 || indexTo > this.slides.length - 1) {\r\n      throw new Error('target index out of bounds');\r\n    }\r\n\r\n    if (indexTo >= this._slides.length) {\r\n      let k = indexTo - this._slides.length + 1;\r\n      while (k--) {\r\n        this._slides.push(this._captainPlaceholder);\r\n      }\r\n    }\r\n    this._slides.splice(indexTo, 0, this._slides.splice(indexFrom, 1)[0]);\r\n\r\n    this._mitt.emit('slidesMoved', this._slides);\r\n  }\r\n\r\n  public startTime(slide: IProvenanceSlide) {\r\n    const index = this._slides.indexOf(slide);\r\n    let previousTime = 0;\r\n    for (let i = 0; i < index; i++) {\r\n      previousTime += this._slides[i].transitionTime;\r\n      previousTime += this._slides[i].duration;\r\n    }\r\n    return previousTime;\r\n  }\r\n\r\n  public slideAtTime(time: number) {\r\n    let index = 0;\r\n    let currentSlide = null;\r\n\r\n    while (time >= 0 && index < this.slides.length) {\r\n      currentSlide = this.slides[index];\r\n      const nextSlideOffset = currentSlide.transitionTime + currentSlide.duration;\r\n\r\n      if (time - nextSlideOffset < 0) {\r\n        break;\r\n      }\r\n\r\n      time -= nextSlideOffset;\r\n      index++;\r\n    }\r\n\r\n    return currentSlide;\r\n  }\r\n\r\n  public set selectedSlide(slide: IProvenanceSlide | null) {\r\n    if (slide && slide.node) {\r\n      this._traverser.toStateNode(slide.node.id, slide.transitionTime);\r\n    }\r\n    this._selectedSlide = slide;\r\n    this._mitt.emit('slideSelected', slide);\r\n  }\r\n\r\n  public get slides() {\r\n    return this._slides;\r\n  }\r\n\r\n  next() {\r\n    if (this._selectedSlide !== null) {\r\n      let currentIndex = this._slides.indexOf(this._selectedSlide);\r\n      if (currentIndex < this._slides.length - 1) {\r\n        currentIndex += 1;\r\n        this.selectedSlide = this._slides[currentIndex];\r\n      } else {\r\n        this.selectedSlide = this._slides[0];\r\n      }\r\n    }\r\n  }\r\n  previous() {\r\n    if (this._selectedSlide !== null) {\r\n      let currentIndex = this._slides.indexOf(this._selectedSlide);\r\n      if (currentIndex > 0) {\r\n        currentIndex -= 1;\r\n        this.selectedSlide = this._slides[currentIndex];\r\n      } else {\r\n        this.selectedSlide = this._slides[this._slides.length - 1];\r\n      }\r\n    }\r\n  }\r\n\r\n  public get graph() {\r\n    return this._graph;\r\n  }\r\n\r\n  on(type: string, handler: Handler) {\r\n    this._mitt.on(type, handler);\r\n  }\r\n\r\n  off(type: string, handler: Handler) {\r\n    this._mitt.off(type, handler);\r\n  }\r\n}\r\n","export interface ISlide {\r\n  duration: number;\r\n  delay: number;\r\n}\r\n\r\nexport enum STATUS {\r\n  IDLE,\r\n  PLAYING\r\n}\r\n\r\nconst wait = (duration: number) => new Promise(resolve => setTimeout(resolve, duration));\r\n\r\nexport class ProvenanceSlidedeckPlayer<T extends ISlide> {\r\n  private readonly _selectCallback: (slide: T) => any;\r\n  private readonly _slides: T[];\r\n  private _currentSlideIndex: number;\r\n  private _status: STATUS;\r\n\r\n  constructor(slides: T[], selectCallback: (slide: T) => any) {\r\n    this._selectCallback = selectCallback;\r\n    this._slides = slides;\r\n    this._currentSlideIndex = 0;\r\n    this._status = STATUS.IDLE;\r\n  }\r\n\r\n  public setSlideIndex(slideIndex: number) {\r\n    this._currentSlideIndex = slideIndex;\r\n  }\r\n\r\n  public get slides() {\r\n    return this._slides;\r\n  }\r\n\r\n  public get currentSlideIndex() {\r\n    return this._currentSlideIndex;\r\n  }\r\n  public set currentSlideIndex(index: number) {\r\n    this._currentSlideIndex = index;\r\n  }\r\n  public async play() {\r\n    const shouldPlayNext = () =>\r\n      this._status === STATUS.PLAYING && this._currentSlideIndex < this._slides.length - 1;\r\n\r\n    if (this._status === STATUS.IDLE) {\r\n      this._status = STATUS.PLAYING;\r\n      this._selectCallback(this._slides[this._currentSlideIndex]);\r\n      do {\r\n        const slide = this._slides[this._currentSlideIndex];\r\n        await wait(slide.duration);\r\n        if (shouldPlayNext()) {\r\n          this._currentSlideIndex += 1;\r\n          this._selectCallback(this._slides[this._currentSlideIndex]);\r\n        }\r\n      } while (shouldPlayNext());\r\n    }\r\n    this._status = STATUS.IDLE;\r\n  }\r\n  public next() {\r\n    this._currentSlideIndex += 1;\r\n    this._selectCallback(this._slides[this._currentSlideIndex]);\r\n  }\r\n  public get status() {\r\n    return this._status;\r\n  }\r\n\r\n  public stop() {\r\n    this._status = STATUS.IDLE;\r\n  }\r\n}\r\n","import { generateUUID } from './utils';\r\nimport mitt from './mitt';\r\nimport { Handler, ISlideAnnotation } from './api';\r\n\r\nexport type AnnotationData = any;\r\n\r\nexport class SlideAnnotation implements ISlideAnnotation {\r\n  // todo: interface\r\n  private readonly _id: string;\r\n  private _data: AnnotationData;\r\n  private _mitt: any;\r\n\r\n  constructor(data: any) {\r\n    this._id = generateUUID();\r\n    this._data = data;\r\n    this._mitt = mitt();\r\n  }\r\n\r\n  public get id(): string {\r\n    return this._id;\r\n  }\r\n\r\n  public set data(value: AnnotationData | null) {\r\n    this._data = value;\r\n    this._mitt.emit('change', value);\r\n  }\r\n\r\n  public get data(): AnnotationData {\r\n    return this._data;\r\n  }\r\n\r\n  public on(type: string, handler: Handler) {\r\n    this._mitt.on(type, handler);\r\n  }\r\n\r\n  public off(type: string, handler: Handler) {\r\n    this._mitt.off(type, handler);\r\n  }\r\n}\r\n","import * as d3 from \"d3\";\r\n\r\nimport \"./style.css\";\r\n\r\nimport {\r\n  IProvenanceSlide,\r\n  ProvenanceSlide,\r\n  IProvenanceSlidedeck\r\n} from \"@visualstorytelling/provenance-core\";\r\nimport { all } from \"q\";\r\n\r\nfunction firstArgThis(f: (...args: any[]) => any) {\r\n  return function(this: any, ...args: any[]) {\r\n    return f(this, ...args);\r\n  };\r\n}\r\n\r\ntype IndexedSlide = { slide: IProvenanceSlide; startTime: number };\r\n\r\nexport class SlideDeckVisualization {\r\n  private _slideDeck: IProvenanceSlidedeck;\r\n  private _root: d3.Selection<HTMLDivElement, any, null, undefined>;\r\n  private _slideTable: d3.Selection<SVGElement, any, null, undefined>;\r\n  private _tableHeight = 125;\r\n  private _tableWidth = 1800;\r\n  private _minimumSlideDuration = 1000;\r\n  private _barWidthTimeMultiplier = 0.05;\r\n  private _barPadding = 5;\r\n  private _resizebarwidth = 5;\r\n  private _previousSlideX = 0;\r\n  private _lineX1 = 50;\r\n  private _placeholderWidth = 60;\r\n  private _placeholderX = 0;\r\n  private _placeholderHeight = 60;\r\n  private _toolbarX = 10;\r\n  private _toolbarY = 35;\r\n  private _toolbarPadding = 20;\r\n  // Upon dragging a slide, no matter where you click on it, the beginning of the slide jumps to the mouse position.\r\n  // This next variable is calculated to adjust for that error, it is a workaround but it works\r\n  private _draggedSlideReAdjustmentFactor = 0;\r\n\r\n  private _originPosition = 60;\r\n  private _currentTime = 0;\r\n  private _currentlyPlaying = false;\r\n  private _timelineShift = 0;\r\n  private _timeIndexedSlides: IndexedSlide[] = [];\r\n  private _gridTimeStep = 1000;\r\n  private _gridSnap = false;\r\n\r\n  private onDelete = (slide: IProvenanceSlide) => {\r\n    this._slideDeck.removeSlide(slide);\r\n  }\r\n\r\n  private onSelect = (slide: IProvenanceSlide) => {\r\n    if (d3.event.defaultPrevented) return;\r\n    if (this._currentlyPlaying) {\r\n      this.stopPlaying();\r\n    }\r\n    this.selectSlide(slide);\r\n  }\r\n\r\n  private selectSlide = (slide: IProvenanceSlide | null) => {\r\n    if (slide === null) {\r\n      return;\r\n    }\r\n    let originalSlideTransitionTime = slide.transitionTime;\r\n    let artificialTransitionTime = 0;\r\n\r\n    if (this._currentlyPlaying) {\r\n      artificialTransitionTime =\r\n        slide.transitionTime -\r\n        (this._currentTime - this._slideDeck.startTime(slide));\r\n    } else {\r\n      artificialTransitionTime = 250;\r\n    }\r\n\r\n    slide.transitionTime =\r\n      artificialTransitionTime >= 0 ? artificialTransitionTime : 0;\r\n    this._slideDeck.selectedSlide = slide;\r\n    slide.transitionTime = originalSlideTransitionTime;\r\n    // this.displayAnnotationText(this._slideDeck.selectedSlide.mainAnnotation, 350);\r\n    this.update();\r\n  }\r\n\r\n  private onMouseEnter() {\r\n    let toolbar = d3.event.target.parentElement.querySelector(\r\n      \".slide_toolbar\"\r\n    );\r\n    toolbar.style.display = \"block\";\r\n  }\r\n  private onMouseLeave() {\r\n    let toolbar = d3.event.target.parentElement.querySelector(\r\n      \".slide_toolbar\"\r\n    );\r\n    toolbar.style.display = \"none\";\r\n  }\r\n\r\n  private onAdd = () => {\r\n    let slideDeck = this._slideDeck;\r\n    const node = slideDeck.graph.current;\r\n    const slide = new ProvenanceSlide(node.label, 5000, 0, [], node);\r\n    slideDeck.addSlide(slide, slideDeck.slides.length);\r\n    this.selectSlide(slide);\r\n  }\r\n  private onClone = (slide: IProvenanceSlide) => {\r\n    let slideDeck = this._slideDeck;\r\n    const cloneSlide = new ProvenanceSlide(\r\n      slide.name,\r\n      5000,\r\n      0,\r\n      [],\r\n      slide.node\r\n    );\r\n    // cloneSlide.mainAnnotation = slide.mainAnnotation;\r\n    slideDeck.addSlide(\r\n      cloneSlide,\r\n      slideDeck.selectedSlide\r\n        ? slideDeck.slides.indexOf(slideDeck.selectedSlide) + 1\r\n        : slideDeck.slides.length\r\n    );\r\n  }\r\n\r\n  private moveDragStarted(draggedObject: any) {\r\n    d3.select<any, any>(this)\r\n      .raise()\r\n      .classed(\"active\", true);\r\n  }\r\n\r\n  private moveDragged = (that: any, draggedObject: any) => {\r\n    d3.select<any, any>(that).attr(\r\n      \"transform\",\r\n      (slide: IProvenanceSlide) => {\r\n        const originalX =\r\n          this.previousSlidesWidth(slide) - this._timelineShift;\r\n        const draggedX = d3.event.x;\r\n        const myIndex = this._slideDeck.slides.indexOf(slide);\r\n\r\n        if (draggedX < originalX && myIndex > 0) {\r\n          // check upwards\r\n          const previousSlide = this._slideDeck.slides[myIndex - 1];\r\n          let previousSlideCenterY =\r\n            this.previousSlidesWidth(previousSlide) -\r\n            this._timelineShift +\r\n            this.barTotalWidth(previousSlide) / 2;\r\n\r\n          if (draggedX < previousSlideCenterY) {\r\n            this._slideDeck.moveSlide(myIndex, myIndex - 1);\r\n          }\r\n        } else if (\r\n          draggedX > originalX &&\r\n          myIndex < this._slideDeck.slides.length - 1\r\n        ) {\r\n          // check downwards\r\n          const nextSlide = this._slideDeck.slides[myIndex + 1];\r\n          let nextSlideCenterY =\r\n            this.previousSlidesWidth(nextSlide) -\r\n            this._timelineShift +\r\n            this.barTotalWidth(nextSlide) / 2;\r\n\r\n          if (draggedX > nextSlideCenterY) {\r\n            this._slideDeck.moveSlide(myIndex, myIndex + 1);\r\n          }\r\n        }\r\n\r\n        if (this._draggedSlideReAdjustmentFactor === 0) {\r\n          this._draggedSlideReAdjustmentFactor =\r\n            draggedX - slide.xPosition;\r\n        }\r\n        let slidePosition =\r\n          d3.event.x -\r\n          this._draggedSlideReAdjustmentFactor -\r\n          this._timelineShift;\r\n        return \"translate(\" + slidePosition + \", 0)\";\r\n      }\r\n    );\r\n  }\r\n\r\n  private moveDragended = (that: any, draggedObject: any) => {\r\n    d3.select<any, any>(that)\r\n      .classed(\"active\", false)\r\n      .attr(\"transform\", (slide: IProvenanceSlide) => {\r\n        return (\r\n          \"translate(\" +\r\n          (this.previousSlidesWidth(slide) +\r\n            50 +\r\n            this._resizebarwidth -\r\n            this._timelineShift) +\r\n          \", 0)\"\r\n        );\r\n      });\r\n    this._draggedSlideReAdjustmentFactor = 0;\r\n  }\r\n\r\n  private transitionTimeDragged = (that: any, slide: IProvenanceSlide) => {\r\n    let transitionTime =\r\n      Math.max(d3.event.x, 0) / this._barWidthTimeMultiplier;\r\n    slide.transitionTime = this.getSnappedTime(slide, transitionTime, 0);\r\n    this.update();\r\n  }\r\n\r\n  private transitionTimeSubject = (that: any, slide: IProvenanceSlide) => {\r\n    return { x: this.barTransitionTimeWidth(slide) };\r\n  }\r\n\r\n  private durationDragged = (that: any, slide: IProvenanceSlide) => {\r\n    let duration = Math.max(\r\n      Math.max(d3.event.x, 0) / this._barWidthTimeMultiplier,\r\n      this._minimumSlideDuration\r\n    );\r\n    slide.duration = this.getSnappedTime(slide, duration, 1);\r\n    this.update();\r\n  }\r\n\r\n  private durationSubject = (that: any, slide: IProvenanceSlide) => {\r\n    return { x: this.barDurationWidth(slide) };\r\n  }\r\n\r\n  private getSnappedTime = (\r\n    slide: IProvenanceSlide,\r\n    time: number,\r\n    isDuration: number\r\n  ) => {\r\n    if (this._gridSnap) {\r\n      let currentTime =\r\n        this._slideDeck.startTime(slide) +\r\n        slide.transitionTime * isDuration +\r\n        time;\r\n      let remainder = currentTime % this._gridTimeStep;\r\n      if (remainder > this._gridTimeStep / 2) {\r\n        return time + this._gridTimeStep - remainder;\r\n      } else {\r\n        return time - remainder;\r\n      }\r\n    }\r\n    return time;\r\n  }\r\n  private barTransitionTimeWidth(slide: IProvenanceSlide) {\r\n    let calculatedWidth =\r\n      this._barWidthTimeMultiplier * slide.transitionTime;\r\n    return Math.max(calculatedWidth, 0);\r\n  }\r\n\r\n  private barDurationWidth(slide: IProvenanceSlide) {\r\n    let calculatedWidth = this._barWidthTimeMultiplier * slide.duration;\r\n    return Math.max(\r\n      calculatedWidth,\r\n      this._minimumSlideDuration * this._barWidthTimeMultiplier\r\n    );\r\n  }\r\n\r\n  private barTotalWidth(slide: IProvenanceSlide) {\r\n    let calculatedWidth =\r\n      this.barTransitionTimeWidth(slide) + this.barDurationWidth(slide);\r\n\r\n    return calculatedWidth;\r\n  }\r\n\r\n  private previousSlidesWidth(slide: IProvenanceSlide) {\r\n    let myIndex = this._slideDeck.slides.indexOf(slide);\r\n    let calculatedWidth = 0;\r\n\r\n    for (let i = 0; i < myIndex; i++) {\r\n      calculatedWidth += this.barTotalWidth(this._slideDeck.slides[i]);\r\n    }\r\n\r\n    return calculatedWidth;\r\n  }\r\n\r\n  private updateTimeIndices(slideDeck: IProvenanceSlidedeck) {\r\n    this._timeIndexedSlides = [];\r\n    let timeIndex = 0;\r\n    slideDeck.slides.forEach(slide => {\r\n      this._timeIndexedSlides.push({\r\n        slide: slide,\r\n        startTime: timeIndex\r\n      });\r\n      timeIndex += slide.transitionTime + slide.duration;\r\n    });\r\n  }\r\n\r\n  private rescaleTimeline = () => {\r\n    let wheelDirection = d3.event.deltaY < 0 ? \"up\" : \"down\";\r\n    if (d3.event.shiftKey) {\r\n      let correctedShiftAmount =\r\n        d3.event.x - (this._originPosition - this._timelineShift);\r\n      if (wheelDirection === \"down\") {\r\n        let scalingFactor = 0.2;\r\n        if (this._placeholderX > this._tableWidth / 2) {\r\n          this._barWidthTimeMultiplier *= 1 - scalingFactor;\r\n          this._timelineShift -= correctedShiftAmount * scalingFactor;\r\n        }\r\n      } else {\r\n        let scalingFactor = 0.25;\r\n        this._barWidthTimeMultiplier *= 1 + scalingFactor;\r\n        if (!(this._placeholderX - this._timelineShift < d3.event.x)) {\r\n          this._timelineShift += correctedShiftAmount * scalingFactor;\r\n        }\r\n      }\r\n      this.adjustGridScale();\r\n    } else {\r\n      let shiftAmount = 100;\r\n      if (wheelDirection === \"down\") {\r\n        this._timelineShift += shiftAmount;\r\n      } else {\r\n        this._timelineShift -= shiftAmount;\r\n      }\r\n    }\r\n    this.update();\r\n  }\r\n\r\n  private onBackward = () => {\r\n    this.stopPlaying();\r\n    for (let i = this._timeIndexedSlides.length - 1; i >= 0; i--) {\r\n      if (this._currentTime > this._timeIndexedSlides[i].startTime) {\r\n        this._currentTime = this._timeIndexedSlides[i].startTime;\r\n        this.update();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  private playTimeline() {\r\n    let intervalStepMS = 25;\r\n    let playingID = setInterval(() => {\r\n      if (!this._currentlyPlaying) {\r\n        clearInterval(playingID);\r\n      } else {\r\n        this._currentTime += intervalStepMS;\r\n        let currentSlide = this._slideDeck.slideAtTime(\r\n          this._currentTime\r\n        );\r\n        if (currentSlide !== this._slideDeck.selectedSlide) {\r\n          this.selectSlide(currentSlide);\r\n        }\r\n      }\r\n      this.update();\r\n    }, intervalStepMS);\r\n  }\r\n\r\n  private onPlay = () => {\r\n    if (this._currentlyPlaying) {\r\n      this.stopPlaying();\r\n    } else {\r\n      this.startPlaying();\r\n    }\r\n  }\r\n\r\n  private startPlaying = () => {\r\n    d3.select(\"foreignObject.player_play\")\r\n      .select(\"body\")\r\n      .html('<i class=\"fa fa-pause\"></i>');\r\n    this._currentlyPlaying = true;\r\n    this.playTimeline();\r\n  }\r\n\r\n  private stopPlaying = () => {\r\n    d3.select(\"foreignObject.player_play\")\r\n      .select(\"body\")\r\n      .html('<i class=\"fa fa-play\"></i>');\r\n    this._currentlyPlaying = false;\r\n  }\r\n\r\n  private onForward = () => {\r\n    this.stopPlaying();\r\n    for (let timedSlide of this._timeIndexedSlides) {\r\n      if (this._currentTime < timedSlide.startTime) {\r\n        this._currentTime = timedSlide.startTime;\r\n        this.update();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  private seekStarted = (that: any) => {\r\n    if (this._currentlyPlaying) {\r\n      this.stopPlaying();\r\n    }\r\n    this._currentTime =\r\n      (d3.event.x - this._originPosition + this._timelineShift) /\r\n      this._barWidthTimeMultiplier;\r\n    this.update();\r\n  }\r\n\r\n  private seekDragged = (that: any) => {\r\n    this._currentTime =\r\n      (d3.event.x + this._timelineShift - this._originPosition) /\r\n      this._barWidthTimeMultiplier;\r\n    this.update();\r\n  }\r\n\r\n  private resizeTable() {\r\n    this._tableWidth = window.innerWidth - 400;\r\n    d3.select(\".slide__table\").attr(\"width\", this._tableWidth);\r\n    d3.select(\".slides_background_rect\").attr(\"width\", this._tableWidth);\r\n  }\r\n\r\n  // private getTextWidth(text: string, fontSize: number, fontFace: string) {\r\n  //     let canvas = document.createElement('canvas');\r\n  //     let context = canvas.getContext('2d');\r\n  //     if (context === null) {\r\n  //         return 0;\r\n  //     }\r\n  //     context.font = fontSize + 'px ' + fontFace;\r\n  //     return context.measureText(text).width;\r\n  // }\r\n\r\n  // private displayAnnotationText = (annotation: string, width: number) => {\r\n  //     d3.selectAll(\"text.annotation\").remove();\r\n  //     let words = annotation.split(\" \");\r\n  //     let currentLine = \"\";\r\n  //     let newLine = \"\";\r\n  //     let y = 20;\r\n  //     let fontSize = 20;\r\n  //     words.forEach(word => {\r\n  //         newLine = currentLine + word + \" \";\r\n  //         if (this.getTextWidth(newLine, fontSize - 1, \"Arial\") > width){\r\n  //             d3.select(\"svg.annotation-area\")\r\n  //                 .append(\"text\")\r\n  //                 .attr(\"class\", \"annotation\")\r\n  //                 .attr(\"x\", 10)\r\n  //                 .attr(\"y\", y)\r\n  //                 .attr(\"font-size\", fontSize)\r\n  //                 .text(currentLine);\r\n  //             y += 22;\r\n  //             currentLine = word + \" \";\r\n  //         } else {\r\n  //             currentLine = newLine;\r\n  //         }\r\n  //     });\r\n  //     d3.select(\"svg.annotation-area\")\r\n  //             .append(\"text\")\r\n  //             .attr(\"class\", \"annotation\")\r\n  //             .attr(\"x\", 10)\r\n  //             .attr(\"y\", y)\r\n  //             .attr(\"font-size\", fontSize)\r\n  //             .text(currentLine);\r\n  //     this.update();\r\n  // }\r\n\r\n  // private addAnnotation = () => {\r\n  //     if(this._slideDeck.selectedSlide === null){\r\n  //         alert(\"There is no slide currently selected!\");\r\n  //         return;\r\n  //     }\r\n  //     let newAnnotation =  prompt(\"Edit story: \", this._slideDeck.selectedSlide.mainAnnotation);\r\n  //     if(newAnnotation !== null){\r\n  //         this._slideDeck.selectedSlide.mainAnnotation = newAnnotation;\r\n  //         if(newAnnotation.length > 150){\r\n  //             alert(\"Find a way to describe your slide in less than 150 characters!\");\r\n  //             this.addAnnotation();\r\n  //             return;\r\n  //         }\r\n  //     } else {\r\n  //         this._slideDeck.selectedSlide.mainAnnotation = \"\";\r\n  //     }\r\n  //     this.displayAnnotationText(this._slideDeck.selectedSlide.mainAnnotation, 350);\r\n  // }\r\n\r\n  private adjustGridScale() {\r\n    if (this._barWidthTimeMultiplier < 0.02) {\r\n      this._gridTimeStep = 5000;\r\n      return;\r\n    }\r\n    if (this._barWidthTimeMultiplier < 0.2) {\r\n      this._gridTimeStep = 1000;\r\n      return;\r\n    }\r\n    this._gridTimeStep = 200;\r\n  }\r\n\r\n  private drawGrid(maxWidth: number) {\r\n    this._slideTable.selectAll(\"circle.gridTime\").remove();\r\n    let time = 0;\r\n    let currentX =\r\n      this._originPosition +\r\n      time * this._barWidthTimeMultiplier -\r\n      this._timelineShift;\r\n\r\n    while (currentX < maxWidth) {\r\n      let radius = time % (this._gridTimeStep * 5) === 0 ? 4 : 2;\r\n      this._slideTable\r\n        .append(\"circle\")\r\n        .attr(\"class\", \"gridTime\")\r\n        .attr(\"fill\", \"black\")\r\n        .attr(\"r\", radius)\r\n        .attr(\r\n          \"cx\",\r\n          this._originPosition +\r\n          time * this._barWidthTimeMultiplier -\r\n          this._timelineShift\r\n        )\r\n        .attr(\"cy\", 65);\r\n      time += this._gridTimeStep;\r\n      currentX =\r\n        this._originPosition +\r\n        time * this._barWidthTimeMultiplier -\r\n        this._timelineShift;\r\n    }\r\n    this._slideTable.selectAll(\"circle.gridTime\").lower();\r\n    this._slideTable.select(\"line.horizontal-line\").lower();\r\n  }\r\n\r\n  private updateGridSnap = () => {\r\n    if (d3.event.y === 540 || d3.event.y === 539) {\r\n      // By far the biggest workaround in the history of code. If the mouse clicks here,\r\n      // this event still fires, but the checkbox does not get checked. As a result, the gridsnap should\r\n      // not be updated. This could all be avoided if I could check the checkbox property itself, but\r\n      // for some reason, all my attempts at accessing the checkbox through d3 is turning up a null value.\r\n      return;\r\n    }\r\n    if (this._gridSnap) {\r\n      this._gridSnap = false;\r\n    } else {\r\n      this._gridSnap = true;\r\n    }\r\n  }\r\n\r\n  private fixDrawingPriorities = () => {\r\n    this._slideTable\r\n      .select(\"rect.seek-dragger\")\r\n      .attr(\"width\", this._placeholderX)\r\n      .raise();\r\n    this._slideTable.select(\"rect.mask\").raise();\r\n    this._slideTable.select(\"#player_placeholder\").raise();\r\n    this._slideTable.select(\"foreignObject.player_backward\").raise();\r\n    this._slideTable.select(\"foreignObject.player_play\").raise();\r\n    this._slideTable.select(\"foreignObject.player_forward\").raise();\r\n  }\r\n\r\n  private displayGridLevel = () => {\r\n    d3.select(\"text.grid_display\").text(\r\n      \"Grid step: \" + (this._gridTimeStep / 1000).toFixed(2) + \" Sec\"\r\n    );\r\n  }\r\n\r\n  private drawSeekBar = () => {\r\n    const timeWidth = this._currentTime * this._barWidthTimeMultiplier;\r\n\r\n    if (timeWidth >= this._placeholderX) {\r\n      this.stopPlaying();\r\n      this._currentTime =\r\n        this._placeholderX / this._barWidthTimeMultiplier;\r\n    }\r\n\r\n    if (this._currentTime < 0) {\r\n      this._currentTime = 0;\r\n    }\r\n\r\n    const shiftedPosition =\r\n      this._originPosition + timeWidth - this._timelineShift;\r\n    this._slideTable\r\n      .select(\"circle.currentTime\")\r\n      .attr(\"cx\", shiftedPosition)\r\n      .raise();\r\n    this._slideTable\r\n      .select(\"line.vertical-line-seek\")\r\n      .attr(\"x1\", shiftedPosition)\r\n      .attr(\"y1\", 65)\r\n      .attr(\"x2\", shiftedPosition)\r\n      .attr(\"y2\", 0)\r\n      .raise();\r\n  }\r\n\r\n  private adjustSlideAddObjectPosition = () => {\r\n    this._slideTable\r\n      .select(\"foreignObject.slide_add\")\r\n      .attr(\"x\", this._placeholderX + 105 - this._timelineShift)\r\n      .attr(\"y\", 15);\r\n  }\r\n\r\n  private adjustHorizontalLine = () => {\r\n    this._slideTable\r\n      .select(\"line.horizontal-line\")\r\n      .attr(\"x2\", this._placeholderX + 60 - this._timelineShift);\r\n  }\r\n\r\n  public update() {\r\n    this.updateTimeIndices(this._slideDeck);\r\n    if (this._timelineShift < 0) {\r\n      this._timelineShift = 0;\r\n    }\r\n    const allExistingNodes = this._slideTable\r\n      .selectAll(\"g.slide\")\r\n      .data<any>(this._slideDeck.slides, (d: IProvenanceSlide) => {\r\n        return d.id;\r\n      });\r\n\r\n    const that = this;\r\n\r\n    const newNodes = allExistingNodes\r\n      .enter()\r\n      .append(\"g\")\r\n      .attr(\"class\", \"slide\")\r\n      .call(\r\n        (d3.drag() as any)\r\n          .clickDistance([2, 2])\r\n          .on(\"start\", this.moveDragStarted)\r\n          .on(\"drag\", firstArgThis(this.moveDragged))\r\n          .on(\"end\", firstArgThis(this.moveDragended))\r\n      );\r\n\r\n    newNodes\r\n      .append(\"rect\")\r\n      .attr(\"class\", \"slides_transitionTime_rect\")\r\n      .attr(\"x\", this._resizebarwidth)\r\n      .attr(\"y\", 0)\r\n      .attr(\"height\", 60)\r\n      .on(\"click\", this.onSelect);\r\n\r\n    let slideGroup = newNodes\r\n      .append(\"g\")\r\n      .attr(\"transform\", \"translate(5,0)\")\r\n      .attr(\"class\", \"slide_group\")\r\n      .on(\"mouseenter\", this.onMouseEnter)\r\n      .on(\"mouseleave\", this.onMouseLeave);\r\n\r\n    slideGroup\r\n      .append(\"rect\")\r\n      .attr(\"class\", \"slides_rect\")\r\n      .attr(\"height\", 60)\r\n      .attr(\"cursor\", \"move\")\r\n      .on(\"click\", this.onSelect);\r\n\r\n    slideGroup\r\n      .append(\"svg\")\r\n      .attr(\"class\", \"text-viewport\")\r\n      .attr(\"height\", 60)\r\n      .append(\"text\")\r\n      .attr(\"class\", \"slides_text\")\r\n      .attr(\"y\", this._resizebarwidth + 2 * this._barPadding)\r\n      .attr(\"font-size\", 20)\r\n      .attr(\"dy\", \".35em\");\r\n\r\n    const textPosition = this._resizebarwidth + 4 * this._barPadding + 68;\r\n\r\n    slideGroup\r\n      .append(\"text\")\r\n      .attr(\"class\", \"slides_transitionTimetext\")\r\n      .attr(\"y\", textPosition)\r\n      .attr(\"font-size\", 16)\r\n      .attr(\"dy\", \"-.65em\");\r\n\r\n    let toolbar = slideGroup.append(\"g\").attr(\"class\", \"slide_toolbar\");\r\n\r\n    toolbar\r\n      .append(\"svg:foreignObject\")\r\n      .attr(\"class\", \"slides_delete_icon\")\r\n      .attr(\"cursor\", \"pointer\")\r\n      .attr(\"width\", 20)\r\n      .attr(\"height\", 20)\r\n      .append(\"xhtml:body\")\r\n      .on(\"click\", this.onDelete)\r\n      .html('<i class=\"fa fa-trash-o\"></i>');\r\n\r\n    toolbar\r\n      .append(\"svg:foreignObject\")\r\n      .attr(\"class\", \"slides_clone_icon\")\r\n      .attr(\"cursor\", \"pointer\")\r\n      .attr(\"width\", 20)\r\n      .attr(\"height\", 20)\r\n      .append(\"xhtml:body\")\r\n      .on(\"click\", this.onClone)\r\n      .html('<i class=\"fa fa-copy\"></i>');\r\n\r\n    const placeholder = this._slideTable.select(\"rect.slides_placeholder\");\r\n\r\n    newNodes\r\n      .append(\"text\")\r\n      .attr(\"class\", \"slides_durationtext\")\r\n      .attr(\"y\", textPosition)\r\n      .attr(\"font-size\", 16)\r\n      .attr(\"dy\", \"-.65em\");\r\n\r\n    newNodes\r\n      .append(\"circle\")\r\n      .attr(\"class\", \"time\")\r\n      .attr(\"cy\", this._resizebarwidth + 60)\r\n      .attr(\"r\", 4)\r\n      .attr(\"fill\", \"blue\");\r\n\r\n    newNodes\r\n      .append(\"circle\")\r\n      .attr(\"class\", \"transitionTime_time\")\r\n      .attr(\"cy\", this._resizebarwidth + 60)\r\n      .attr(\"r\", 4)\r\n      .attr(\"fill\", \"blue\");\r\n\r\n    newNodes\r\n      .append(\"rect\")\r\n      .attr(\"class\", \"slides_duration_resize\")\r\n      .attr(\"x\", 0)\r\n      .attr(\"width\", this._resizebarwidth)\r\n      .attr(\"height\", 60)\r\n      .attr(\"cursor\", \"ew-resize\")\r\n      .call(\r\n        (d3.drag() as any)\r\n          .subject(firstArgThis(this.durationSubject))\r\n          .on(\"drag\", firstArgThis(this.durationDragged))\r\n      );\r\n\r\n    newNodes\r\n      .append(\"rect\")\r\n      .attr(\"class\", \"slides_transitionTime_resize\")\r\n      .attr(\"y\", 0)\r\n      .attr(\"width\", this._resizebarwidth)\r\n      .attr(\"height\", 60)\r\n      .attr(\"cursor\", \"ew-resize\")\r\n      .call(\r\n        (d3.drag() as any)\r\n          .subject(firstArgThis(this.transitionTimeSubject))\r\n          .on(\"drag\", firstArgThis(this.transitionTimeDragged))\r\n      );\r\n    d3.select(\".slide__table\").on(\"wheel\", this.rescaleTimeline);\r\n\r\n    // Update all nodes\r\n\r\n    const allNodes = newNodes\r\n      .merge(allExistingNodes as any)\r\n      .attr(\"transform\", (slide: IProvenanceSlide) => {\r\n        this._previousSlideX = this.previousSlidesWidth(slide);\r\n        slide.xPosition =\r\n          50 + this._resizebarwidth + this.previousSlidesWidth(slide);\r\n        return (\r\n          \"translate(\" +\r\n          (slide.xPosition - this._timelineShift) +\r\n          \", 0 )\"\r\n        );\r\n      });\r\n\r\n    allNodes\r\n      .select(\"rect.slides_transitionTime_rect\")\r\n      .attr(\"width\", (slide: IProvenanceSlide) => {\r\n        return this.barTransitionTimeWidth(slide);\r\n      });\r\n\r\n    allNodes\r\n      .select(\"rect.slides_transitionTime_resize\")\r\n      .attr(\"x\", (slide: IProvenanceSlide) => {\r\n        return (\r\n          this.barTransitionTimeWidth(slide) + this._resizebarwidth\r\n        );\r\n      });\r\n\r\n    slideGroup = allNodes.select(\"g.slide_group\");\r\n\r\n    slideGroup\r\n      .select(\"rect.slides_rect\")\r\n      .attr(\"selected\", (slide: IProvenanceSlide) => {\r\n        return this._slideDeck.selectedSlide === slide;\r\n      })\r\n      .attr(\"x\", (slide: IProvenanceSlide) => {\r\n        return this.barTransitionTimeWidth(slide);\r\n      })\r\n      .attr(\"width\", (slide: IProvenanceSlide) => {\r\n        this._placeholderX =\r\n          this._previousSlideX +\r\n          this.barDurationWidth(slide) +\r\n          this.barTransitionTimeWidth(slide);\r\n        return this.barDurationWidth(slide);\r\n      });\r\n\r\n    slideGroup\r\n      .select(\"svg.text-viewport\")\r\n      .attr(\"x\", (slide: IProvenanceSlide) => {\r\n        return this.barTransitionTimeWidth(slide);\r\n      })\r\n      .attr(\"width\", (slide: IProvenanceSlide) => {\r\n        return this.barDurationWidth(slide) - 5;\r\n      });\r\n\r\n    toolbar = allNodes.select(\"g.slide_toolbar\");\r\n\r\n    toolbar\r\n      .select(\"foreignObject.slides_delete_icon\")\r\n      .attr(\"y\", (slide: IProvenanceSlide) => {\r\n        return this._toolbarY;\r\n      })\r\n      .attr(\"x\", (slide: IProvenanceSlide) => {\r\n        return this._toolbarX + this.barTransitionTimeWidth(slide) - 3;\r\n      });\r\n\r\n    toolbar\r\n      .select(\"foreignObject.slides_clone_icon\")\r\n      .attr(\"y\", (slide: IProvenanceSlide) => {\r\n        return this._toolbarY;\r\n      })\r\n      .attr(\"x\", (slide: IProvenanceSlide) => {\r\n        return (\r\n          this._toolbarX +\r\n          this._toolbarPadding +\r\n          this.barTransitionTimeWidth(slide) -\r\n          3\r\n        );\r\n      });\r\n\r\n    slideGroup\r\n      .select(\"text.slides_text\")\r\n      .attr(\"x\", (slide: IProvenanceSlide) => {\r\n        return this._barPadding * 2 - 2;\r\n      })\r\n      .text((slide: IProvenanceSlide) => {\r\n        return slide.name;\r\n      });\r\n\r\n    slideGroup\r\n      .select(\"text.slides_transitionTimetext\")\r\n      .attr(\"x\", (slide: IProvenanceSlide) => {\r\n        return (\r\n          this.barTransitionTimeWidth(slide) + this._barPadding * 2\r\n        );\r\n      })\r\n      .text((slide: IProvenanceSlide) => {\r\n        if (\r\n          this.barTransitionTimeWidth(slide) > 35 ||\r\n          this._slideDeck.startTime(slide) === 0\r\n        ) {\r\n          return (\r\n            (this._slideDeck.startTime(slide) +\r\n              slide.transitionTime) /\r\n            1000\r\n          ).toFixed(2);\r\n        } else {\r\n          return \"\";\r\n        }\r\n      });\r\n\r\n    allNodes.select(\"circle.time\").attr(\"cx\", (slide: IProvenanceSlide) => {\r\n      return this.barTotalWidth(slide) + this._resizebarwidth;\r\n    });\r\n\r\n    allNodes\r\n      .select(\"circle.transitionTime_time\")\r\n      .attr(\"cx\", (slide: IProvenanceSlide) => {\r\n        return (\r\n          this.barTransitionTimeWidth(slide) + this._resizebarwidth\r\n        );\r\n      });\r\n\r\n    allNodes\r\n      .select(\"rect.slides_duration_resize\")\r\n      .attr(\"x\", (slide: IProvenanceSlide) => {\r\n        return this.barTotalWidth(slide);\r\n      });\r\n\r\n    allNodes\r\n      .select(\"text.slides_durationtext\")\r\n      .attr(\"x\", (slide: IProvenanceSlide) => {\r\n        return this.barTotalWidth(slide) + this._barPadding + 10;\r\n      })\r\n      .text((slide: IProvenanceSlide) => {\r\n        return (\r\n          (this._slideDeck.startTime(slide) +\r\n            slide.duration +\r\n            slide.transitionTime) /\r\n          1000\r\n        ).toFixed(2);\r\n      });\r\n\r\n    placeholder.attr(\"x\", this._placeholderX + 80 - this._timelineShift);\r\n\r\n    this.adjustHorizontalLine();\r\n\r\n    this.adjustSlideAddObjectPosition();\r\n\r\n    this.drawSeekBar();\r\n\r\n    this.drawGrid(\r\n      this._placeholderX + this._originPosition - this._timelineShift\r\n    );\r\n\r\n    this.fixDrawingPriorities();\r\n\r\n    this.displayGridLevel();\r\n\r\n    allExistingNodes.exit().remove();\r\n  }\r\n\r\n  constructor(slideDeck: IProvenanceSlidedeck, elm: HTMLDivElement) {\r\n    this._tableWidth = window.innerWidth - 400;\r\n    window.addEventListener(\"resize\", this.resizeTable);\r\n    this._slideDeck = slideDeck;\r\n    this._root = d3.select(elm);\r\n\r\n    this._slideTable = this._root\r\n      .append<SVGElement>(\"svg\")\r\n      .attr(\"class\", \"slide__table\")\r\n      .attr(\"height\", this._tableHeight)\r\n      .attr(\"width\", this._tableWidth);\r\n\r\n    this._slideTable\r\n      .append(\"rect\")\r\n      .attr(\"class\", \"slides_background_rect\")\r\n      .attr(\"x\", 0)\r\n      .attr(\"y\", 0)\r\n      .attr(\"height\", this._tableHeight)\r\n      .attr(\"width\", this._tableWidth);\r\n\r\n    this._slideTable\r\n      .append(\"line\")\r\n      .attr(\"class\", \"vertical-line\")\r\n      .attr(\"x1\", this._lineX1)\r\n      .attr(\"y1\", 0)\r\n      .attr(\"x2\", this._lineX1)\r\n      .attr(\"y2\", 100)\r\n      .attr(\"stroke\", \"gray\")\r\n      .attr(\"stroke-width\", 2);\r\n\r\n    this._slideTable\r\n      .append(\"line\")\r\n      .attr(\"class\", \"horizontal-line\")\r\n      .attr(\"x1\", this._lineX1)\r\n      .attr(\"y1\", this._resizebarwidth + this._originPosition)\r\n      .attr(\"y2\", this._resizebarwidth + this._originPosition)\r\n      .attr(\"stroke\", \"gray\")\r\n      .attr(\"stroke-width\", 2);\r\n\r\n    this._slideTable\r\n      .append(\"rect\")\r\n      .attr(\"class\", \"seek-dragger\")\r\n      .attr(\"fill\", \"transparent\")\r\n      .attr(\"x\", this._originPosition)\r\n      .attr(\"y\", this._originPosition)\r\n      .attr(\"height\", 12)\r\n      .attr(\"width\", 12)\r\n      .attr(\"cursor\", \"pointer\")\r\n      .call(\r\n        (d3.drag() as any)\r\n          .on(\"start\", firstArgThis(this.seekStarted))\r\n          .on(\"drag\", firstArgThis(this.seekDragged))\r\n      );\r\n\r\n    this._slideTable\r\n      .append(\"rect\")\r\n      .attr(\"class\", \"slides_placeholder\")\r\n      .attr(\"x\", this._lineX1 + this._barPadding)\r\n      .attr(\"y\", 0)\r\n      .attr(\"width\", this._placeholderWidth)\r\n      .attr(\"height\", this._placeholderHeight);\r\n\r\n    this._slideTable\r\n      .append(\"circle\")\r\n      .attr(\"class\", \"currentTime\")\r\n      .attr(\"fill\", \"red\")\r\n      .attr(\"r\", 4)\r\n      .attr(\"cx\", this._originPosition)\r\n      .attr(\"cy\", 65);\r\n\r\n    this._slideTable\r\n      .append(\"line\")\r\n      .attr(\"class\", \"vertical-line-seek\")\r\n      .attr(\"x1\", this._originPosition)\r\n      .attr(\"y1\", 65)\r\n      .attr(\"x2\", this._originPosition)\r\n      .attr(\"y2\", 0)\r\n      .attr(\"stroke\", \"red\")\r\n      .attr(\"stroke-width\", 1);\r\n\r\n    this._slideTable\r\n      .append(\"svg:foreignObject\")\r\n      .attr(\"class\", \"slide_add\")\r\n      .attr(\"x\", this._placeholderX + 18)\r\n      .attr(\"cursor\", \"pointer\")\r\n      .attr(\"width\", 30)\r\n      .attr(\"height\", 30)\r\n      .append(\"xhtml:body\")\r\n      .on(\"click\", this.onAdd)\r\n      .html('<i class=\"fa fa-file-text-o\"></i>');\r\n\r\n    this._slideTable\r\n      .append(\"rect\")\r\n      .attr(\"class\", \"mask\")\r\n      .attr(\"x\", 0)\r\n      .attr(\"y\", 0)\r\n      .attr(\"width\", 50)\r\n      .attr(\"height\", 100)\r\n      .attr(\"fill\", \"white\");\r\n\r\n    this._slideTable\r\n      .append(\"rect\")\r\n      .attr(\"class\", \"slides_placeholder\")\r\n      .attr(\"id\", \"player_placeholder\")\r\n      .attr(\"x\", 15)\r\n      .attr(\"y\", 0)\r\n      .attr(\"width\", 30)\r\n      .attr(\"height\", 75);\r\n\r\n    this._slideTable\r\n      .append(\"svg:foreignObject\")\r\n      .attr(\"class\", \"player_backward\")\r\n      .attr(\"x\", 22)\r\n      .attr(\"y\", 5)\r\n      .attr(\"cursor\", \"pointer\")\r\n      .attr(\"width\", 20)\r\n      .attr(\"height\", 20)\r\n      .append(\"xhtml:body\")\r\n      .on(\"click\", this.onBackward)\r\n      .html('<i class=\"fa fa-backward\"></i>');\r\n\r\n    this._slideTable\r\n      .append(\"svg:foreignObject\")\r\n      .attr(\"class\", \"player_play\")\r\n      .attr(\"x\", 22)\r\n      .attr(\"y\", 25)\r\n      .attr(\"cursor\", \"pointer\")\r\n      .attr(\"width\", 20)\r\n      .attr(\"height\", 20)\r\n      .append(\"xhtml:body\")\r\n      .on(\"click\", this.onPlay)\r\n      .html('<i class=\"fa fa-play\"></i>');\r\n\r\n    this._slideTable\r\n      .append(\"svg:foreignObject\")\r\n      .attr(\"class\", \"player_forward\")\r\n      .attr(\"x\", 22)\r\n      .attr(\"y\", 45)\r\n      .attr(\"cursor\", \"pointer\")\r\n      .attr(\"width\", 20)\r\n      .attr(\"height\", 20)\r\n      .append(\"xhtml:body\")\r\n      .on(\"click\", this.onForward)\r\n      .html('<i class=\"fa fa-forward\"></i>');\r\n\r\n    this._slideTable\r\n      .append(\"text\")\r\n      .attr(\"class\", \"grid_display\")\r\n      .attr(\"x\", this._originPosition + 10)\r\n      .attr(\"y\", 110);\r\n\r\n    this._slideTable\r\n      .append(\"text\")\r\n      .attr(\"class\", \"checkBox_text\")\r\n      .attr(\"x\", this._originPosition + 195)\r\n      .attr(\"y\", 110)\r\n      .text(\"Grid Snap\");\r\n\r\n    this._slideTable\r\n      .append(\"foreignObject\")\r\n      .attr(\"width\", 13)\r\n      .attr(\"height\", 15)\r\n      .attr(\"x\", this._originPosition + 175)\r\n      .attr(\"y\", 96)\r\n      .append(\"xhtml:body\")\r\n      .html(\"<form><input type=checkbox class=gridSnap/></form>\")\r\n      .on(\"click\", this.updateGridSnap);\r\n\r\n    // let area = this._root\r\n    //     .append<SVGElement>(\"svg\")\r\n    //     .attr(\"class\", \"annotation-area\")\r\n    //     .attr(\"x\", this._tableWidth + 5)\r\n    //     .attr(\"y\", 0)\r\n    //     .attr(\"width\", 350)\r\n    //     .attr(\"height\", 150);\r\n    // area\r\n    //     .append(\"rect\")\r\n    //     .attr(\"class\", \"slides_placeholder\")\r\n    //     .attr(\"id\", \"annotation-box\")\r\n    //     .attr(\"x\", 0)\r\n    //     .attr(\"y\", 0)\r\n    //     .attr(\"width\", 350)\r\n    //     .attr(\"height\", 100);\r\n    // area\r\n    //     .append(\"text\")\r\n    //     .attr(\"x\", 10)\r\n    //     .attr(\"y\", 120)\r\n    //     .attr(\"font-size\", 18)\r\n    //     .text(\"Edit slide story\");\r\n    // area\r\n    //     .append(\"rect\")\r\n    //     .attr(\"class\", \"add_annotation\")\r\n    //     .attr(\"x\", 0)\r\n    //     .attr(\"y\", 100)\r\n    //     .attr(\"width\", 150)\r\n    //     .attr(\"height\", 30)\r\n    //     .attr(\"cursor\", \"pointer\")\r\n    //     .attr(\"fill\", \"transparent\")\r\n    //     .on(\"click\", this.addAnnotation);\r\n\r\n    slideDeck.on(\"slideAdded\", () => this.update());\r\n    slideDeck.on(\"slideRemoved\", () => this.update());\r\n    slideDeck.on(\"slidesMoved\", () => this.update());\r\n    slideDeck.on(\"slideSelected\", () => this.update());\r\n\r\n    this.update();\r\n  }\r\n}\r\n"],"names":["tslib_1.__extends","d3.event","d3.select","d3.drag"],"mappings":"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"}