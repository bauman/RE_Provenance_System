{"version":3,"file":"provenance-core.es5.js","sources":["../src/ActionFunctionRegistry.ts","../src/utils.ts","../src/mitt.ts","../src/ProvenanceGraph.ts","../src/ProvenanceTracker.ts","../src/ProvenanceGraphTraverser.ts","../src/ProvenanceSlide.ts","../src/ProvenanceSlidedeck.ts","../src/ProvenanceSlidedeckPlayer.ts","../src/SlideAnnotation.ts","../src/provenance-core.ts"],"sourcesContent":["import {\r\n  IActionFunctionRegistry,\r\n  ActionFunction,\r\n  ActionFunctionWithThis\r\n} from './api';\r\n\r\nexport class ActionFunctionRegistry implements IActionFunctionRegistry {\r\n  private functionRegistry: { [key: string]: ActionFunctionWithThis } = {};\r\n\r\n  /**\r\n   * Register a new function into the provenance tracker (to be able to call it later)\r\n   *\r\n   * @param name The name of the new function to register\r\n   * @param func The ActionFunction to register\r\n   * @param thisArg Value to use as this (i.e the reference Object) when executing callback\r\n   *\r\n   */\r\n  register(name: string, func: ActionFunction, thisArg: any = null): void {\r\n    if (this.functionRegistry[name]) {\r\n      throw new Error('Function already registered');\r\n    }\r\n    this.functionRegistry[name] = { func, thisArg };\r\n  }\r\n\r\n  getFunctionByName(name: string): ActionFunctionWithThis {\r\n    if (!this.functionRegistry[name]) {\r\n      throw new Error('Function \\'' + name + '\\' not found in registry');\r\n    }\r\n    return this.functionRegistry[name];\r\n  }\r\n}\r\n","import { ProvenanceNode, StateNode, Action, ReversibleAction } from './api';\r\n\r\nexport function generateUUID(): string {\r\n  // Public Domain/MIT\r\n  let d = new Date().getTime();\r\n  if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\r\n    d += performance.now(); // use high-precision timer if available\r\n  }\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n    // tslint:disable-next-line:no-bitwise\r\n    const r = ((d + Math.random() * 16) % 16) | 0;\r\n    d = Math.floor(d / 16);\r\n    // tslint:disable-next-line:no-bitwise\r\n    return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\r\n  });\r\n}\r\n\r\n/**\r\n * Generate a Unix timestamp in milliseconds\r\n *\r\n * @returns {number} in milliseconds\r\n */\r\nexport function generateTimestamp(): number {\r\n  // Removed, because performance.now() returns a floating point number, which is not compatible with the Date.getTime() integer\r\n  // if (\r\n  //   window.performance &&\r\n  //   window.performance.now &&\r\n  //   window.performance.timing &&\r\n  //   window.performance.timing.navigationStart\r\n  // ) {\r\n  //   return window.performance.now();\r\n  // }\r\n  return new Date().getTime();\r\n}\r\n\r\nexport function isStateNode(node: ProvenanceNode): node is StateNode {\r\n  return 'parent' in node;\r\n}\r\n\r\nexport function isReversibleAction(action: Action): action is ReversibleAction {\r\n  return 'undo' in action;\r\n}\r\n","import { Handler } from './api';\r\n\r\n/** Mitt: Tiny (~200b) functional event emitter / pubsub.\r\n *  @name mitt\r\n *  @returns {Mitt}\r\n */\r\n\r\nexport default function mitt(all?: any) {\r\n  all = all || Object.create(null);\r\n\r\n  return {\r\n    /**\r\n     * Register an event handler for the given type.\r\n     *\r\n     * @param  {String} type\tType of event to listen for\r\n     * @param  {Function} handler Function to call in response to given event\r\n     * @memberOf mitt\r\n     */\r\n    on(type: string, handler: Handler) {\r\n      (all[type] || (all[type] = [])).push(handler);\r\n    },\r\n\r\n    /**\r\n     * Remove an event handler for the given type.\r\n     *\r\n     * @param  {String} type\tType of event to unregister `handler` from\r\n     * @param  {Function} handler Handler function to remove\r\n     * @memberOf mitt\r\n     */\r\n    off(type: string, handler: Handler) {\r\n      if (all[type]) {\r\n        // tslint:disable-next-line:no-bitwise\r\n        all[type].splice(all[type].indexOf(handler) >>> 0, 1);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Invoke all handlers for the given type.\r\n     *\r\n     * @param {String} type  The event type to invoke\r\n     * @param {Any} [evt]  Any value (object is recommended and powerful), passed to each handler\r\n     * @memberOf mitt\r\n     */\r\n    emit(type: string, evt: any) {\r\n      (all[type] || []).slice().map((handler: Handler) => {\r\n        handler(evt);\r\n      });\r\n    }\r\n  };\r\n}\r\n","import {\r\n  Application,\r\n  Handler,\r\n  IProvenanceGraph,\r\n  NodeIdentifier,\r\n  ProvenanceNode,\r\n  RootNode,\r\n  SerializedProvenanceGraph,\r\n  SerializedProvenanceNode,\r\n  SerializedStateNode\r\n} from './api';\r\nimport { generateTimestamp, generateUUID, isStateNode } from './utils';\r\nimport mitt from './mitt';\r\n\r\n/**\r\n * Provenance Graph implementation\r\n *\r\n * @param version The version of the software to track the provenance of\r\n *\r\n */\r\nexport class ProvenanceGraph implements IProvenanceGraph {\r\n  public application: Application;\r\n  public readonly root: RootNode;\r\n  private _current: ProvenanceNode;\r\n  private _mitt: any;\r\n  private _nodes: { [key: string]: ProvenanceNode } = {};\r\n\r\n  constructor(application: Application, userid: string = 'Unknown', rootNode?: RootNode) {\r\n    this._mitt = mitt();\r\n    this.application = application;\r\n\r\n    if (rootNode) {\r\n      this.root = rootNode;\r\n    } else {\r\n      this.root = {\r\n        id: generateUUID(),\r\n        label: 'Root',\r\n        metadata: {\r\n          createdBy: userid,\r\n          createdOn: generateTimestamp()\r\n        },\r\n        children: [],\r\n        artifacts: {}\r\n      } as RootNode;\r\n    }\r\n    this.addNode(this.root);\r\n    this._current = this.root;\r\n  }\r\n\r\n  addNode(node: ProvenanceNode): void {\r\n    if (this._nodes[node.id]) {\r\n      throw new Error('Node already added');\r\n    }\r\n    this._nodes[node.id] = node;\r\n    this._mitt.emit('nodeAdded', node);\r\n  }\r\n\r\n  getNode(id: NodeIdentifier): ProvenanceNode {\r\n    const result = this._nodes[id];\r\n    if (!result) {\r\n      throw new Error('Node id not found');\r\n    }\r\n    return this._nodes[id];\r\n  }\r\n\r\n  get current(): ProvenanceNode {\r\n    return this._current;\r\n  }\r\n\r\n  set current(node: ProvenanceNode) {\r\n    if (!this._nodes[node.id]) {\r\n      throw new Error('Node id not found');\r\n    }\r\n    this._current = node;\r\n    this._mitt.emit('currentChanged', node);\r\n  }\r\n\r\n  get nodes() {\r\n    return this._nodes;\r\n  }\r\n\r\n  emitNodeChangedEvent(node: ProvenanceNode) {\r\n    /* istanbul ignore if */\r\n    if (!this._nodes[node.id]) {\r\n      throw new Error('Node id not found');\r\n    }\r\n    this._mitt.emit('nodeChanged', node);\r\n  }\r\n\r\n  on(type: string, handler: Handler) {\r\n    this._mitt.on(type, handler);\r\n  }\r\n\r\n  off(type: string, handler: Handler) {\r\n    this._mitt.off(type, handler);\r\n  }\r\n}\r\n\r\n/* Beware that deeply nested properties in serializedProvenanceGraph is mutated in the process */\r\nexport function restoreProvenanceGraph(\r\n  serializedProvenanceGraph: SerializedProvenanceGraph\r\n): ProvenanceGraph {\r\n  const nodes: { [key: string]: any } = {};\r\n\r\n  // restore nodes as key value\r\n  for (const node of serializedProvenanceGraph.nodes) {\r\n    nodes[node.id] = { ...node };\r\n  }\r\n\r\n  // restore parent/children relations\r\n  for (const nodeId of Object.keys(nodes)) {\r\n    const node = nodes[nodeId];\r\n    node.children = node.children.map((id: string) => nodes[id]);\r\n    if ('parent' in node) {\r\n      node.parent = nodes[node.parent];\r\n    }\r\n  }\r\n\r\n  const graph = new ProvenanceGraph(serializedProvenanceGraph.application);\r\n  (graph as any)._nodes = nodes;\r\n  (graph as any)._current = nodes[serializedProvenanceGraph.current];\r\n  (graph as any).root = nodes[serializedProvenanceGraph.root];\r\n\r\n  return graph;\r\n}\r\n\r\nexport function serializeProvenanceGraph(graph: ProvenanceGraph): SerializedProvenanceGraph {\r\n  const nodes = Object.keys(graph.nodes).map(nodeId => {\r\n    const node = graph.getNode(nodeId);\r\n    const serializedNode: SerializedProvenanceNode = { ...node } as any;\r\n    if (isStateNode(node)) {\r\n      (serializedNode as SerializedStateNode).parent = node.parent.id;\r\n    }\r\n    serializedNode.children = node.children.map(child => child.id);\r\n    return serializedNode;\r\n  });\r\n\r\n  return {\r\n    nodes,\r\n    root: graph.root.id,\r\n    application: graph.application,\r\n    current: graph.current.id\r\n  };\r\n}\r\n","import {\r\n  StateNode,\r\n  Action,\r\n  IProvenanceTracker,\r\n  IActionFunctionRegistry,\r\n  IProvenanceGraph,\r\n  ActionFunctionWithThis,\r\n  ProvenanceNode,\r\n  RootNode\r\n} from './api';\r\nimport { generateUUID, generateTimestamp } from './utils';\r\n\r\n/**\r\n * Provenance Graph Tracker implementation\r\n *\r\n * @param graph The provenance graph to track (this will serve as storage construct)\r\n * @param current Optional parameter to set current node for importing a provenance graph that is non-empty\r\n *\r\n */\r\nexport class ProvenanceTracker implements IProvenanceTracker {\r\n  registry: IActionFunctionRegistry;\r\n\r\n  /**\r\n   * When acceptActions is false, the Tracker will ignore calls to applyAction\r\n   */\r\n  public acceptActions = true;\r\n\r\n  private graph: IProvenanceGraph;\r\n  private username: string;\r\n\r\n  constructor(\r\n    registry: IActionFunctionRegistry,\r\n    graph: IProvenanceGraph,\r\n    username: string = 'Unknown'\r\n  ) {\r\n    this.registry = registry;\r\n    this.graph = graph;\r\n    this.username = username;\r\n  }\r\n\r\n  /**\r\n   * Calls the action.do function with action.doArguments\r\n   *\r\n   * @param action\r\n   * @param skipFirstDoFunctionCall If set to true, the do-function will not be called this time,\r\n   *        it will only be called when traversing.\r\n   */\r\n  async applyAction(action: Action, skipFirstDoFunctionCall: boolean = false): Promise<StateNode> {\r\n    if (!this.acceptActions) {\r\n      return Promise.resolve(this.graph.current as StateNode);\r\n    }\r\n\r\n    const createNewStateNode = (parentNode: ProvenanceNode, actionResult: any): StateNode => ({\r\n      id: generateUUID(),\r\n      label: action.do,\r\n      metadata: {\r\n        createdBy: this.username,\r\n        createdOn: generateTimestamp()\r\n      },\r\n      action,\r\n      actionResult,\r\n      parent: parentNode,\r\n      children: [],\r\n      artifacts: {}\r\n    });\r\n\r\n    let newNode: StateNode;\r\n\r\n    // Save the current node because the next block could be asynchronous\r\n    const currentNode = this.graph.current;\r\n\r\n    if (skipFirstDoFunctionCall) {\r\n      newNode = createNewStateNode(this.graph.current, null);\r\n    } else {\r\n      // Get the registered function from the action out of the registry\r\n      const functionNameToExecute: string = action.do;\r\n      const funcWithThis: ActionFunctionWithThis = this.registry.getFunctionByName(\r\n        functionNameToExecute\r\n      );\r\n      const actionResult = await funcWithThis.func.apply(funcWithThis.thisArg, action.doArguments);\r\n\r\n      newNode = createNewStateNode(currentNode, actionResult);\r\n    }\r\n\r\n    // When the node is created, we need to update the graph.\r\n    currentNode.children.push(newNode);\r\n\r\n    this.graph.addNode(newNode);\r\n    this.graph.current = newNode;\r\n\r\n    return newNode;\r\n  }\r\n}\r\n","import {\r\n  IProvenanceGraphTraverser,\r\n  ProvenanceNode,\r\n  StateNode,\r\n  IActionFunctionRegistry,\r\n  IProvenanceGraph,\r\n  NodeIdentifier,\r\n  ActionFunctionWithThis,\r\n  IProvenanceTracker,\r\n  Handler\r\n} from './api';\r\nimport { isReversibleAction, isStateNode } from './utils';\r\nimport mitt from './mitt';\r\n\r\nfunction isNextNodeInTrackUp(currentNode: ProvenanceNode, nextNode: ProvenanceNode): boolean {\r\n  if (isStateNode(currentNode) && currentNode.parent === nextNode) {\r\n    return true;\r\n  } else if (isStateNode(nextNode) && nextNode.parent !== currentNode) {\r\n    // This is a guard against the illegitimate use of this function for unconnected nodes\r\n    /* istanbul ignore next */\r\n    throw new Error('Unconnected nodes, you probably should not be using this function');\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction findPathToTargetNode(\r\n  currentNode: ProvenanceNode,\r\n  targetNode: ProvenanceNode,\r\n  track: ProvenanceNode[],\r\n  comingFromNode: ProvenanceNode = currentNode\r\n): boolean {\r\n  if (currentNode && currentNode === targetNode) {\r\n    track.unshift(currentNode);\r\n    return true;\r\n  } else if (currentNode) {\r\n    // Map the StateNodes in the children StateEdges\r\n    const nodesToCheck: ProvenanceNode[] = [...currentNode.children];\r\n\r\n    // Add the parent node to that same list\r\n    /* istanbul ignore else */\r\n    if (isStateNode(currentNode)) {\r\n      nodesToCheck.push(currentNode.parent);\r\n    }\r\n\r\n    for (const node of nodesToCheck) {\r\n      // If the node to check is in the track already, skip it.\r\n      if (node === comingFromNode) {\r\n        continue;\r\n      }\r\n      /* istanbul ignore else */\r\n      if (findPathToTargetNode(node, targetNode, track, currentNode)) {\r\n        track.unshift(currentNode);\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  /* istanbul ignore next */\r\n  return false;\r\n}\r\n\r\nclass IrreversibleError extends Error {\r\n  invalidTraversal = true;\r\n}\r\n\r\nexport class ProvenanceGraphTraverser implements IProvenanceGraphTraverser {\r\n  public graph: IProvenanceGraph;\r\n  public tracker: IProvenanceTracker | null;\r\n  /**\r\n   * trackingWhenTraversing === false disables tracking when traversing to prevent feedback.\r\n   * When applying an action, the object we're tracking might trigger its event listeners. This\r\n   * means that more Nodes are added to the ProvenanceGraph when traversing, which is most likely\r\n   * unwanted behaviour.\r\n   *\r\n   * It will enable/disable immediately before/after calling the action. So if the event is emitted\r\n   * asynchronously after the action, it will not work.\r\n   */\r\n  public trackingWhenTraversing = false;\r\n  private registry: IActionFunctionRegistry;\r\n  private _mitt: any;\r\n\r\n  constructor(\r\n    registry: IActionFunctionRegistry,\r\n    graph: IProvenanceGraph,\r\n    tracker: IProvenanceTracker | null = null\r\n  ) {\r\n    this.registry = registry;\r\n    this.graph = graph;\r\n    this.tracker = tracker;\r\n    this._mitt = mitt();\r\n  }\r\n\r\n  async executeFunctions(\r\n    functionsToDo: ActionFunctionWithThis[],\r\n    argumentsToDo: any[],\r\n    transitionTimes: number[]\r\n  ): Promise<StateNode> {\r\n    let result;\r\n    for (let i = 0; i < functionsToDo.length; i++) {\r\n      const funcWithThis = functionsToDo[i];\r\n      let promise: any;\r\n      if (this.tracker && this.tracker.acceptActions && !this.trackingWhenTraversing) {\r\n        this.tracker.acceptActions = false;\r\n        promise = funcWithThis.func.apply(funcWithThis.thisArg, argumentsToDo[i]);\r\n        this.tracker.acceptActions = true;\r\n      } else {\r\n        promise = funcWithThis.func.apply(funcWithThis.thisArg, argumentsToDo[i]);\r\n      }\r\n      result = await promise;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Finds shortest path between current node and node with request identifer.\r\n   * Calls the do/undo functions of actions on the path.\r\n   *\r\n   * @param id Node identifier\r\n   */\r\n  async toStateNode(\r\n    id: NodeIdentifier,\r\n    transtionTime?: number\r\n  ): Promise<ProvenanceNode | undefined> {\r\n    const currentNode = this.graph.current;\r\n    const targetNode = this.graph.getNode(id);\r\n\r\n    if (currentNode === targetNode) {\r\n      return Promise.resolve(currentNode);\r\n    }\r\n\r\n    const trackToTarget: ProvenanceNode[] = [];\r\n\r\n    const success = findPathToTargetNode(currentNode, targetNode, trackToTarget);\r\n\r\n    /* istanbul ignore if */\r\n    if (!success) {\r\n      throw new Error('No path to target node found in graph');\r\n    }\r\n\r\n    let functionsToDo: ActionFunctionWithThis[],\r\n      argumentsToDo: any[],\r\n      transitionTimes: number[] = [];\r\n    try {\r\n      const arg = this.getFunctionsAndArgsFromTrack(trackToTarget);\r\n      functionsToDo = arg.functionsToDo;\r\n      argumentsToDo = arg.argumentsToDo;\r\n      functionsToDo.forEach((func: any) => {\r\n        transitionTimes.push(transtionTime || 0);\r\n      });\r\n    } catch (error) {\r\n      if (error.invalidTraversal) {\r\n        this._mitt.emit('invalidTraversal', targetNode);\r\n        return undefined;\r\n      } else {\r\n        throw error;\r\n      }\r\n    }\r\n    const result = await this.executeFunctions(functionsToDo, argumentsToDo, transitionTimes);\r\n    this.graph.current = targetNode;\r\n    return result;\r\n  }\r\n\r\n  private getFunctionsAndArgsFromTrack(\r\n    track: ProvenanceNode[]\r\n  ): {\r\n    functionsToDo: ActionFunctionWithThis[];\r\n    argumentsToDo: any[];\r\n  } {\r\n    const functionsToDo: ActionFunctionWithThis[] = [];\r\n    const argumentsToDo: any[] = [];\r\n\r\n    for (let i = 0; i < track.length - 1; i++) {\r\n      const thisNode = track[i];\r\n      const nextNode = track[i + 1];\r\n      const up = isNextNodeInTrackUp(thisNode, nextNode);\r\n\r\n      if (up) {\r\n        /* istanbul ignore else */\r\n        if (isStateNode(thisNode)) {\r\n          if (!isReversibleAction(thisNode.action)) {\r\n            throw new IrreversibleError('trying to undo an Irreversible action');\r\n          }\r\n          const undoFunc = this.registry.getFunctionByName(thisNode.action.undo);\r\n          functionsToDo.push(undoFunc);\r\n          argumentsToDo.push(thisNode.action.undoArguments);\r\n        } else {\r\n          /* istanbul ignore next */\r\n          throw new Error('Going up from root? unreachable error ... i hope');\r\n        }\r\n      } else {\r\n        /* istanbul ignore else */\r\n        if (isStateNode(nextNode)) {\r\n          const doFunc = this.registry.getFunctionByName(nextNode.action.do);\r\n          functionsToDo.push(doFunc);\r\n          argumentsToDo.push(nextNode.action.doArguments);\r\n        } else {\r\n          /* istanbul ignore next */\r\n          throw new Error('Going down to the root? unreachable error ... i hope');\r\n        }\r\n      }\r\n    }\r\n\r\n    return { functionsToDo, argumentsToDo };\r\n  }\r\n\r\n  on(type: string, handler: Handler) {\r\n    this._mitt.on(type, handler);\r\n  }\r\n\r\n  off(type: string, handler: Handler) {\r\n    this._mitt.off(type, handler);\r\n  }\r\n}\r\n","import { IProvenanceSlide, ProvenanceNode, Handler } from './api';\r\nimport { generateUUID } from './utils';\r\nimport { SlideAnnotation } from './SlideAnnotation';\r\nimport mitt from './mitt';\r\n\r\nexport class ProvenanceSlide implements IProvenanceSlide {\r\n  private _id: string;\r\n  private _node: ProvenanceNode | null;\r\n  private _name: string;\r\n  private _duration: number;\r\n  private _transitionTime: number;\r\n  private _annotations: SlideAnnotation[];\r\n  private _mitt: any;\r\n  private _xPosition: number;\r\n\r\n  constructor(\r\n    name: string,\r\n    duration: number,\r\n    transitionTime: number,\r\n    annotations: SlideAnnotation[] = [],\r\n    node: ProvenanceNode | null = null\r\n  ) {\r\n    this._id = generateUUID();\r\n    this._name = name;\r\n    this._duration = duration;\r\n    this._transitionTime = transitionTime;\r\n    this._annotations = annotations;\r\n    this._node = node;\r\n    this._mitt = mitt();\r\n    this._xPosition = 0;\r\n  }\r\n\r\n  public get id(): string {\r\n    return this._id;\r\n  }\r\n\r\n  public get node(): ProvenanceNode | null {\r\n    return this._node;\r\n  }\r\n\r\n  public set node(value: ProvenanceNode | null) {\r\n    this._node = value;\r\n  }\r\n\r\n  public get name(): string {\r\n    return this._name;\r\n  }\r\n\r\n  public set name(value: string) {\r\n    this._name = value;\r\n  }\r\n\r\n  public get duration(): number {\r\n    return this._duration;\r\n  }\r\n\r\n  public set duration(value: number) {\r\n    this._duration = value;\r\n  }\r\n\r\n  public get transitionTime(): number {\r\n    return this._transitionTime;\r\n  }\r\n\r\n  public set transitionTime(value: number) {\r\n    this._transitionTime = value;\r\n  }\r\n\r\n  public addAnnotation(annotation: SlideAnnotation) {\r\n    this._annotations.push(annotation);\r\n    this._mitt.emit('addAnnotation', annotation);\r\n  }\r\n\r\n  public removeAnnotation(annotation: SlideAnnotation) {\r\n    const index = this._annotations.indexOf(annotation);\r\n    this._annotations.splice(index, 1);\r\n    this._mitt.emit('removeAnnotation', annotation);\r\n  }\r\n\r\n  public get annotations() {\r\n    return this._annotations;\r\n  }\r\n\r\n  public on(type: string, handler: Handler) {\r\n    this._mitt.on(type, handler);\r\n  }\r\n\r\n  public off(type: string, handler: Handler) {\r\n    this._mitt.off(type, handler);\r\n  }\r\n\r\n  public get xPosition(): number {\r\n    return this._xPosition;\r\n  }\r\n\r\n  public set xPosition(value: number) {\r\n    this._xPosition = value;\r\n  }\r\n}\r\n","import mitt from './mitt';\r\nimport {\r\n  IProvenanceSlidedeck,\r\n  IProvenanceGraphTraverser,\r\n  IProvenanceGraph,\r\n  Application,\r\n  Handler,\r\n  IProvenanceSlide\r\n} from './api';\r\nimport { ProvenanceSlide } from './ProvenanceSlide';\r\n\r\nexport class ProvenanceSlidedeck implements IProvenanceSlidedeck {\r\n  private _application: Application;\r\n  private _graph: IProvenanceGraph;\r\n  private _mitt: any;\r\n  private _slides: IProvenanceSlide[] = [];\r\n  private _traverser: IProvenanceGraphTraverser;\r\n  private _selectedSlide: IProvenanceSlide | null;\r\n\r\n  private _captainPlaceholder = new ProvenanceSlide('Captain Placeholder', 0, 0);\r\n\r\n  constructor(application: Application, traverser: IProvenanceGraphTraverser) {\r\n    this._mitt = mitt();\r\n    this._application = application;\r\n    this._graph = traverser.graph;\r\n    this._traverser = traverser;\r\n\r\n    this._selectedSlide = null;\r\n  }\r\n\r\n  public get application() {\r\n    return this._application;\r\n  }\r\n\r\n  public addSlide(slide?: IProvenanceSlide, index?: number): IProvenanceSlide {\r\n    if (\r\n      !index ||\r\n      isNaN(index) ||\r\n      !Number.isInteger(index) ||\r\n      index > this._slides.length ||\r\n      index < 0\r\n    ) {\r\n      index = this._slides.length;\r\n    }\r\n    if (slide && this._slides.indexOf(slide) >= 0) {\r\n      throw new Error('Cannot add a slide that is already in the deck');\r\n    }\r\n    if (!slide) {\r\n      const node = this._graph.current;\r\n      slide = new ProvenanceSlide(node.label, 1, 0, [], node);\r\n    }\r\n    if (this._slides.length === 0) {\r\n      this._selectedSlide = slide;\r\n    }\r\n    this._slides.splice(index, 0, slide);\r\n    this._mitt.emit('slideAdded', slide);\r\n\r\n    return slide;\r\n  }\r\n\r\n  public removeSlideAtIndex(index: number) {\r\n    const deletedSlides = this._slides.splice(index, 1);\r\n\r\n    // This can only be 1 slide now, therefore this is ok.\r\n    if (this._selectedSlide === deletedSlides[0]) {\r\n      this.selectedSlide = null;\r\n    }\r\n    this._mitt.emit('slideRemoved', deletedSlides[0]);\r\n  }\r\n\r\n  public removeSlide(slide: IProvenanceSlide) {\r\n    this.removeSlideAtIndex(this._slides.indexOf(slide));\r\n  }\r\n\r\n  public get selectedSlide(): IProvenanceSlide | null {\r\n    return this._selectedSlide;\r\n  }\r\n\r\n  public moveSlide(indexFrom: number, indexTo: number) {\r\n    if (indexTo < 0 || indexTo > this.slides.length - 1) {\r\n      throw new Error('target index out of bounds');\r\n    }\r\n\r\n    if (indexTo >= this._slides.length) {\r\n      let k = indexTo - this._slides.length + 1;\r\n      while (k--) {\r\n        this._slides.push(this._captainPlaceholder);\r\n      }\r\n    }\r\n    this._slides.splice(indexTo, 0, this._slides.splice(indexFrom, 1)[0]);\r\n\r\n    this._mitt.emit('slidesMoved', this._slides);\r\n  }\r\n\r\n  public startTime(slide: IProvenanceSlide) {\r\n    const index = this._slides.indexOf(slide);\r\n    let previousTime = 0;\r\n    for (let i = 0; i < index; i++) {\r\n      previousTime += this._slides[i].transitionTime;\r\n      previousTime += this._slides[i].duration;\r\n    }\r\n    return previousTime;\r\n  }\r\n\r\n  public slideAtTime(time: number) {\r\n    let index = 0;\r\n    let currentSlide = null;\r\n\r\n    while (time >= 0 && index < this.slides.length) {\r\n      currentSlide = this.slides[index];\r\n      const nextSlideOffset = currentSlide.transitionTime + currentSlide.duration;\r\n\r\n      if (time - nextSlideOffset < 0) {\r\n        break;\r\n      }\r\n\r\n      time -= nextSlideOffset;\r\n      index++;\r\n    }\r\n\r\n    return currentSlide;\r\n  }\r\n\r\n  public set selectedSlide(slide: IProvenanceSlide | null) {\r\n    if (slide && slide.node) {\r\n      this._traverser.toStateNode(slide.node.id, slide.transitionTime);\r\n    }\r\n    this._selectedSlide = slide;\r\n    this._mitt.emit('slideSelected', slide);\r\n  }\r\n\r\n  public get slides() {\r\n    return this._slides;\r\n  }\r\n\r\n  next() {\r\n    if (this._selectedSlide !== null) {\r\n      let currentIndex = this._slides.indexOf(this._selectedSlide);\r\n      if (currentIndex < this._slides.length - 1) {\r\n        currentIndex += 1;\r\n        this.selectedSlide = this._slides[currentIndex];\r\n      } else {\r\n        this.selectedSlide = this._slides[0];\r\n      }\r\n    }\r\n  }\r\n  previous() {\r\n    if (this._selectedSlide !== null) {\r\n      let currentIndex = this._slides.indexOf(this._selectedSlide);\r\n      if (currentIndex > 0) {\r\n        currentIndex -= 1;\r\n        this.selectedSlide = this._slides[currentIndex];\r\n      } else {\r\n        this.selectedSlide = this._slides[this._slides.length - 1];\r\n      }\r\n    }\r\n  }\r\n\r\n  public get graph() {\r\n    return this._graph;\r\n  }\r\n\r\n  on(type: string, handler: Handler) {\r\n    this._mitt.on(type, handler);\r\n  }\r\n\r\n  off(type: string, handler: Handler) {\r\n    this._mitt.off(type, handler);\r\n  }\r\n}\r\n","export interface ISlide {\r\n  duration: number;\r\n  delay: number;\r\n}\r\n\r\nexport enum STATUS {\r\n  IDLE,\r\n  PLAYING\r\n}\r\n\r\nconst wait = (duration: number) => new Promise(resolve => setTimeout(resolve, duration));\r\n\r\nexport class ProvenanceSlidedeckPlayer<T extends ISlide> {\r\n  private readonly _selectCallback: (slide: T) => any;\r\n  private readonly _slides: T[];\r\n  private _currentSlideIndex: number;\r\n  private _status: STATUS;\r\n\r\n  constructor(slides: T[], selectCallback: (slide: T) => any) {\r\n    this._selectCallback = selectCallback;\r\n    this._slides = slides;\r\n    this._currentSlideIndex = 0;\r\n    this._status = STATUS.IDLE;\r\n  }\r\n\r\n  public setSlideIndex(slideIndex: number) {\r\n    this._currentSlideIndex = slideIndex;\r\n  }\r\n\r\n  public get slides() {\r\n    return this._slides;\r\n  }\r\n\r\n  public get currentSlideIndex() {\r\n    return this._currentSlideIndex;\r\n  }\r\n  public set currentSlideIndex(index: number) {\r\n    this._currentSlideIndex = index;\r\n  }\r\n  public async play() {\r\n    const shouldPlayNext = () =>\r\n      this._status === STATUS.PLAYING && this._currentSlideIndex < this._slides.length - 1;\r\n\r\n    if (this._status === STATUS.IDLE) {\r\n      this._status = STATUS.PLAYING;\r\n      this._selectCallback(this._slides[this._currentSlideIndex]);\r\n      do {\r\n        const slide = this._slides[this._currentSlideIndex];\r\n        await wait(slide.duration);\r\n        if (shouldPlayNext()) {\r\n          this._currentSlideIndex += 1;\r\n          this._selectCallback(this._slides[this._currentSlideIndex]);\r\n        }\r\n      } while (shouldPlayNext());\r\n    }\r\n    this._status = STATUS.IDLE;\r\n  }\r\n  public next() {\r\n    this._currentSlideIndex += 1;\r\n    this._selectCallback(this._slides[this._currentSlideIndex]);\r\n  }\r\n  public get status() {\r\n    return this._status;\r\n  }\r\n\r\n  public stop() {\r\n    this._status = STATUS.IDLE;\r\n  }\r\n}\r\n","import { generateUUID } from './utils';\r\nimport mitt from './mitt';\r\nimport { Handler, ISlideAnnotation } from './api';\r\n\r\nexport type AnnotationData = any;\r\n\r\nexport class SlideAnnotation implements ISlideAnnotation {\r\n  // todo: interface\r\n  private readonly _id: string;\r\n  private _data: AnnotationData;\r\n  private _mitt: any;\r\n\r\n  constructor(data: any) {\r\n    this._id = generateUUID();\r\n    this._data = data;\r\n    this._mitt = mitt();\r\n  }\r\n\r\n  public get id(): string {\r\n    return this._id;\r\n  }\r\n\r\n  public set data(value: AnnotationData | null) {\r\n    this._data = value;\r\n    this._mitt.emit('change', value);\r\n  }\r\n\r\n  public get data(): AnnotationData {\r\n    return this._data;\r\n  }\r\n\r\n  public on(type: string, handler: Handler) {\r\n    this._mitt.on(type, handler);\r\n  }\r\n\r\n  public off(type: string, handler: Handler) {\r\n    this._mitt.off(type, handler);\r\n  }\r\n}\r\n","export * from './ActionFunctionRegistry';\r\nexport * from './ProvenanceGraph';\r\nexport * from './ProvenanceTracker';\r\nexport * from './ProvenanceGraphTraverser';\r\nexport * from './ProvenanceSlide';\r\nexport * from './ProvenanceSlidedeck';\r\nexport * from './ProvenanceSlidedeckPlayer';\r\nexport * from './SlideAnnotation';\r\nexport * from './api';\r\nexport * from './utils';\r\n// export { SerializedProvenanceGraph } from './api';\r\n// export { SerializedRootNode } from './api';\r\n// export { SerializedStateNode } from './api';\r\n// export { SerializedProvenanceNode } from './api';\r\n"],"names":["tslib_1.__assign","tslib_1.__extends"],"mappings":"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"}